var DtcMaxVlanNum = 1024;function ChangeVlanPanel(){  var sItem = document.getElementById("ArpItem").value;if ( sItem == "all" ){   document.getElementById("VlanLayer").style.display = "none";document.getElementById("VlanIDLayer").style.display = "none";onGetArpObj(sItem);}else{document.getElementById("VlanLayer").style.display = "";document.getElementById("VlanIDLayer").style.display = "";if (-1 == document.getElementById("Vlanid").selectedIndex){frames[0].document.getElementById("arpinfo_table").value = "";}else{var sVlanId = document.getElementById("Vlanid").value;onGetArpObj(sVlanId);}}}function VlanSelectChange(){var sVlanId = document.getElementById("Vlanid").value;onGetArpObj(sVlanId);}function OnArpRefresh(){var sItem = document.getElementById("ArpItem").value;if ( sItem == "all" ){onGetArpObj(sItem);    }else{if ( -1 == document.getElementById("Vlanid").selectedIndex ){frames[0].document.getElementById("arpinfo_table").value = "";}else{var sVlanId = document.getElementById("Vlanid").value;onGetArpObj(sVlanId);}}}function onGetArpObj(sVlanId){   var nVlanId = 0;var sSelecteVlaue = document.getElementById("ArpItem").value;if("all" != sVlanId){nVlanId = parseInt(sVlanId);}window.frames[0].location = "/wcn/arp/arp_list.x?uid="+top.WnmGetUID()+"&vlanid=" + nVlanId;} function onArpDtcValidchk(){var oRequest = new XmlRequest(XCMP_ACTION_GETNEXT,XCMP_GET_ALL);oRequest.SendGetRequest("/wcn/arp/arp_dtcvalidchk.x");return false;}function onARPDelAllDtc(){var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule;var oTable;var i;var oSelRows = objarp_dtcenable.GetSelectedRows();var nSelCount = oSelRows.length;var vlanid;var orow;if(0 == nSelCount){alert(top.RS_NONE_SELECTED);return false;}if(!confirm(sConfirmEnableall)){return false;}oSubModule = oRequest.AddModule("arp").AddSubModule("arpdtc");oTable = oSubModule.AddTable("arpdtcvlanenable-table");for(i = 0; i < nSelCount; i++){vlanid = oSelRows[i].GetCellText(1);orow = oTable.AddRow();orow.AddField("vlanid",vlanid);orow.AddField("status",0);}return oRequest.SendPostRequest("/wcn/arp/modify_sub.x");}function onARPEnableAllDtc(){var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule;var oTable;var i;var oSelRows = objarp_dtcenable.GetSelectedRows();var nSelCount = oSelRows.length;var vlanid;var orow;if(0 == nSelCount){alert(top.RS_NONE_SELECTED);return false;}if(!confirm(sConfirmEnableall)){return false;}oSubModule = oRequest.AddModule("arp").AddSubModule("arpdtc");oTable = oSubModule.AddTable("arpdtcvlanenable-table");for(i = 0; i < nSelCount; i++){vlanid = oSelRows[i].GetCellText(1);orow = oTable.AddRow();orow.AddField("vlanid",vlanid);orow.AddField("status",1);}return oRequest.SendPostRequest("/wcn/arp/modify_sub.x");}function onARPDtcDisableAllTrust(){var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule;var oTable;var i;var oSelRows = objarp_dtctrust.GetSelectedRows();var nSelCount = oSelRows.length;var vlanid;var orow;if(0 == nSelCount){alert(top.RS_NONE_SELECTED);return false;}if(!confirm(sConfirmDelallTrust)){return false;}oSubModule = oRequest.AddModule("arp").AddSubModule("arpdtc");oTable = oSubModule.AddTable("arpdtctrustif-table");for(i = 0; i < nSelCount; i++){vlanid = oSelRows[i].GetCellText(1);orow = oTable.AddRow();orow.AddField("ifindex",oSelRows[i].GetValue());orow.AddField("ifname");orow.AddField("status",0);}return oRequest.SendPostRequest("/wcn/arp/modify_sub.x");}function onARPDtcEnableAllTrust(){var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule;var oTable;var i;var oSelRows = objarp_dtctrust.GetSelectedRows();var nSelCount = oSelRows.length;var vlanid;var orow;if(0 == nSelCount){alert(top.RS_NONE_SELECTED);return false;}if(!confirm(sConfirmEnableallTrust)){return false;}oSubModule = oRequest.AddModule("arp").AddSubModule("arpdtc");oTable = oSubModule.AddTable("arpdtctrustif-table");for(i = 0; i < nSelCount; i++){vlanid = oSelRows[i].GetCellText(1);orow = oTable.AddRow();orow.AddField("ifindex",oSelRows[i].GetValue());orow.AddField("ifname");orow.AddField("status",1);}return oRequest.SendPostRequest("/wcn/arp/modify_sub.x");}function onArpDtcStaticAdd(){var oRequest = new XmlRequest(XCMP_ACTION_GETNEXT,XCMP_GET_ALL);oRequest.SendGetRequest("/wcn/arp/arp_dtcstaticadd.x");return false;}function onARPAntiStaticAdd(){var oRequest = new XmlRequest(XCMP_ACTION_GETNEXT,XCMP_GET_ALL);oRequest.SendGetRequest("/wcn/arp/arp_antistaticadd.x");return false;}function onDelSelectedARPSend(){var ulifindex;var paramArray;var vTemp;var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule;var oTable;var i;var oSelRows = listSend.GetSelectedRows();var nSelCount = oSelRows.length;if(0 == nSelCount){alert(top.RS_NONE_SELECTED);return false;}if(!confirm(top.RS_DELETE_ONE)){return false;}oSubModule = oRequest.AddModule("arp").AddSubModule("arp");oTable = oSubModule.AddTable("arpsend-table");for(i = 0; i < nSelCount; i++){ulifindex = oSelRows[i].GetValue();oTable.AddField("interface-index",ulifindex).AddField("action",0);                 }oRequest.SendPostRequest("/wcn/arp/modify_sub.x");return false;}function deleteARPSend(oRow){var oifindex;var ulIfIndex;var paramArray;var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule;var oTable;oSubModule = oRequest.AddModule("arp").AddSubModule("arp");oTable = oSubModule.AddTable("arpsend-table");ulIfIndex = oRow.GetValue();oTable.AddField("interface-index",ulIfIndex).AddField("action",0);                 oRequest.SendPostRequest("/wcn/arp/modify_sub.x");return false;}function onARPSendCancel(){onSendGratuitousArp();}function onGetIf(ifname){var oAjax = new AjaxObject();oAjax.SetCallback(onSendCreate);var oRequest  = new XmlRequest(XCMP_ACTION_ONLYGET);var oSubModule = oRequest.AddModule("wcn").AddSubModule("interface");oSubModule.AddTable("interface-table").AddField("ifname",ifname).AddField("ifindex");oAjax.SendRequest("/wcn/arp/modify_sub.x?xml="+oRequest.MakeXmlString()+"&uid="+top.WnmGetUID(),ifname);}function onSendCreateSubmit(oForm){if(!WnmSubmit(oForm)){return false;}var ulifIndex = document.getElementById("select_interface").value;var ultime = document.getElementById("text_time").value;var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule = oRequest.AddModule("arp").AddSubModule("arp");oSubModule.AddTable("arpsend-table").AddField("interface-index",ulifIndex).AddField("time",ultime).AddField("action", 1); oRequest.SendPostRequest("/wcn/arp/modify_sub.x");return true;}function onSendCreate(oifname, xmlHttp){if(null != xmlHttp && xmlHttp.responseXML.getElementsByTagName("ifindex").length == 1){var ifIndex = xmlHttp.responseXML.getElementsByTagName("ifindex")[0].text;var otime = document.getElementByld("text_time");var oTable;var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule = oRequest.AddModule("arp").AddSubModule("arp");oSubModule.AddTable("arpsend-table").AddField("interface-index",ifIndex).AddField("time",otime.value).AddField("action", 0); oRequest.SendPostRequest("/wcn/arp/arp_sub.x");}else{alert(InterfaceIsNotExists);document.getElementById("CreatSubmit").disabled = false;document.getElementById("CancleButton").disabled = false;}return true;}function OnModifySend(oRow){var ulIfindex = oRow.GetValue();var ifName = oRow.GetCellText(1).trim();var ulTimevalue = oRow.GetCellText(2).trim();var oRequest  = new XmlRequest(XCMP_ACTION_ONLYGET);oRequest.AddInfo("<interface-index>"+ulIfindex+"</interface-index>"+"<ifname>"+ifName+"</ifname>"+"<timevalue>"+ulTimevalue+"</timevalue>");oRequest.SendGetRequest("/wcn/arp/mdf_send.x");return false;}function onSendModifyQueryCB(oifindex, xmlHttp){if(null == xmlHttp){alert(top.RS_ERR_INT_TIMEOUT);return false;}var doc = xmlHttp.responseXML;var nNodes = doc.selectSingleNode("/ROOT/DYNA/arp/arp/arpsend-table/row/time");if( null != nNodes ){    var oRequest  = new XmlRequest(XCMP_ACTION_GETNEXT, XCMP_GET_ALL);var oSubModule = oRequest.AddModule("wcn").AddSubModule("interface");oSubModule.AddTable("interface-table").AddField("ifname").AddField("ifindex").AddField("iftype");oSubModule.AddTable("iftype-table").AddField("iftype").AddField("iftypename");oSubModule = oRequest.AddModule("arp").AddSubModule("arp");oSubModule.AddTable("arpsend-table",1,XCMP_ACTION_ONLYGET).AddField("interface-index",oifindex.value).AddField("time");oRequest.SendGetRequest("/wcn/arp/mdf_send.x");}else{alert(InterfaceIsNotExists);document.getElementById("CreatSubmit").disabled = false;document.getElementById("CancleButton").disabled = false;}return true;}function onSendMdfSubmit(oForm){if(!WnmSubmit(oForm)){return false;}var ulifIndex = document.getElementById("id_ifindex").value;var ultime = document.getElementById("text_time").value;var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule = oRequest.AddModule("arp").AddSubModule("arp");oSubModule.AddTable("arpsend-table").AddField("interface-index",ulifIndex).AddField("time",ultime).AddField("action", 1); oRequest.SendPostRequest("/wcn/arp/modify_sub.x");return false;}function onArpCreate(ourl){var oRequest = new XmlRequest(XCMP_ACTION_GETNEXT, XCMP_GET_ALL);var oSubModule = oRequest.AddModule("wcn").AddSubModule("interface");oSubModule.AddTable("interface-table").AddField("ifname").AddField("ifindex").AddField("iftype"); oSubModule.AddTable("iftype-table").AddField("iftype").AddField("iftypename");oRequest.SendGetRequest(ourl);}function onArpTableAddNew(){var oRequest = new XmlRequest(XCMP_ACTION_GETNEXT, XCMP_GET_ALL);var oSubModule = oRequest.AddModule("wcn").AddSubModule("interface");oSubModule.AddTable("interface-table").AddField("ifname").AddField("ifindex").AddField("iftype"); oSubModule.AddTable("iftype-table").AddField("iftype").AddField("iftypename");var oSubModulearp = oRequest.AddModule("arp").AddSubModule("arp");oSubModulearp.AddTable("arpvpn-table",1,XCMP_ACTION_ONLYGET).AddField("status");oRequest.SendGetRequest("/wcn/arp/arp_manageadd.x");return false;}function onCheckBoxSel(){if(document.getElementById("out_port_frame").style.display == ""){document.getElementById("out_port_frame").style.display = "none";}else{document.getElementById("out_port_frame").style.display = "";}		}function onARPTableDelOne(oRow){if(true != confirm(top.RS_DELETE_ONE)){return false;}var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule = oRequest.AddModule("arp").AddSubModule("arp");var oTable = oSubModule.AddTable("arp-table"); var ip = oRow.GetCellText(1).trim();var vpn= oRow.GetCellText(5).trim();var orow = oTable.AddRow();orow.AddField("ipv4",ip);orow.AddField("vrf-name",vpn);orow.AddField("action",1);return  oRequest.SendPostRequest("/wcn/arp/modify_sub.x");}function onARPTableModOne(oRow){    var oRequest = new XmlRequest(XCMP_ACTION_GETNEXT,XCMP_GET_ALL);var ipv4 = oRow.GetCellText(1).trim();var mac = oRow.GetCellText(2).trim();var vlanid = oRow.GetCellText(3).trim();var interfacename = oRow.GetCellText(4).trim();var vpn = oRow.GetCellText(5).trim();if (oRow.GetAttribute("entrytype") != 1){alert (strMdfOnlyStatic);return false;}var oSubModule = oRequest.AddModule("wcn").AddSubModule("interface");oSubModule.AddTable("interface-table").AddField("ifname").AddField("ifindex").AddField("iftype"); oSubModule.AddTable("iftype-table").AddField("iftype").AddField("iftypename");var oSubModulearp = oRequest.AddModule("arp").AddSubModule("arp");oSubModulearp.AddTable("arpvpn-table",1,XCMP_ACTION_ONLYGET).AddField("status");oRequest.AddInfo("<ipv4>"+ipv4+"</ipv4>"+"<mac>"+mac+"</mac>"+"<vlanid>"+vlanid+"</vlanid>"+"<interfacename>"+interfacename+"</interfacename>"+"<vpn>"+vpn+"</vpn>");			       return  oRequest.SendGetRequest("/wcn/arp/arp_managemod.x");}function onArpTableMdfSubmit(oForm){if(!WnmSubmit(oForm)){return false;}if((document.getElementById("text_vlanid").value.trim() != "" && document.getElementById("select_interface").value == 0)||(document.getElementById("text_vlanid").value.trim() == "" && document.getElementById("select_interface").value != 0)){alert(getErrMsg_VlanIfBoth());return false;}if((document.getElementById("select_interface").selectedIndex) != 0){onGetIfIndex();}else{onARPEntryAddorMod();}	return false;}function onArpTableAddOneSubmit(oForm){if(!WnmSubmit(oForm)){return false;}if((document.getElementById("text_vlanid").value.trim() != "" && document.getElementById("select_interface").value == 0)||(document.getElementById("text_vlanid").value.trim() == "" && document.getElementById("select_interface").value != 0)){alert(getErrMsg_VlanIfBoth());return false;}if((document.getElementById("select_interface").selectedIndex) != 0){onGetIfIndex();}else{onARPEntryAddorMod();}	return false;}function onARPTableDelSelected(){var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule;var oTable;var i;var oSelRows = oARPTableList.GetSelectedRows();var nSelCount = oSelRows.length;var ip;var vpn;var orow;if(0 == nSelCount){alert(top.RS_NONE_SELECTED);return false;}if(!confirm(top.RS_DELETE_ONE)){return false;}oSubModule = oRequest.AddModule("arp").AddSubModule("arp");oTable = oSubModule.AddTable("arp-table");for(i = 0; i < nSelCount; i++){ip = oSelRows[i].GetCellText(1).trim();vpn = oSelRows[i].GetCellText(5).trim();orow = oTable.AddRow();orow.AddField("ipv4",ip);orow.AddField("vrf-name",vpn);orow.AddField("action",1);}return oRequest.SendPostRequest("/wcn/arp/modify_sub.x");}function onARPEntryAddorMod(){var oipv4 = document.getElementById("text_ip");var omac = document.getElementById("text_mac");var ovlan = document.getElementById("text_vlanid");var oselect_if = document.getElementById("select_interface");var ovpn = document.getElementById("text_vpn");var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oTable;var oSubModule = oRequest.AddModule("arp").AddSubModule("arp");oTable = oSubModule.AddTable("arp-table")var	oRow = oTable.AddRow();oRow.AddField("ipv4", oipv4.value)oRow.AddField("mac", omac.value)oRow.AddField("vrf-name", ovpn.value)if (ovlan.value.trim() != ""){oRow.AddField("vlanid", ovlan.value)oRow.AddField("interface-name",oselect_if.value)}oRow.AddField("action", 0); oRequest.SendPostRequest("/wcn/arp/modify_sub.x");}function onGetIfIndex(){var oselect_if = document.getElementById("select_interface");var oRequest = new XmlRequest(XCMP_ACTION_ONLYGET);var oSubModule = oRequest.AddModule("wcn").AddSubModule("interface");oSubModule.AddTable("interface-table").AddField("ifname",oselect_if.value).AddField("ifindex");var oAjax = new AjaxObject(); oAjax.SetCallback(onARPCreateAfterCheck);oAjax.SendRequest("/wcn/arp/modify_sub.x?xml="+oRequest.MakeXmlString()+"&uid="+top.WnmGetUID(),oselect_if.value);}function onARPCreateAfterCheck(usrPara,xmlHttp){	var oipv4 = document.getElementById("text_ip");var omac = document.getElementById("text_mac");var ovlan = document.getElementById("text_vlanid");var ovpn = document.getElementById("text_vpn");var oTable;var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule = oRequest.AddModule("arp").AddSubModule("arp");if(ovlan.value.trim() != 0){if(null == xmlHttp){alert(InterfaceIsNotExists);return false;}oSubModule.AddTable("arp-table").AddField("ipv4", oipv4.value).AddField("mac", omac.value).AddField("vlanid", ovlan.value).AddField("interface-name",usrPara).AddField("vrf-name",ovpn.value).AddField("action", 0); }else{oSubModule.AddTable("arp-table").AddField("ipv4", oipv4.value).AddField("mac", omac.value).AddField("action", 0); }return oRequest.SendPostRequest("/wcn/arp/modify_sub.x");}function onSendInterradioSel(){   if(document.getElementById("id_filedsetSend").style.display == ""){document.getElementById("id_filedsetSend").style.display = "none";}else{document.getElementById("id_filedsetSend").style.display = "";}		}function makeArray(n){this.length = n;for (var i = 0; i < n; i++)this[i] = 0;return this;}function OnMoveIn(sInGroup,sOutGroup){in_group=document.getElementById(sInGroup);out_group =document.getElementById(sOutGroup);var toMoveCount = 0;for (var i = 1; i < out_group.length; i++){if (out_group.options[i].selected == 1)toMoveCount++;}var arrayIndex = 0;var toMoveArray = new makeArray(toMoveCount);for (var i = 1; i < out_group.length; i++){if (out_group.options[i].selected == 1)toMoveArray[arrayIndex++] = out_group.options[i].text;}if (toMoveArray.length > 0){for (i = 0; i < in_group.length; i++)in_group.options[i].selected = 0;}var j;var memberName;for (var i = 0; i < toMoveArray.length; i++){memberName = toMoveArray[i];for (j = 0; j < in_group.length; j++){if (in_group.options[j].text == memberName){in_group.options[j].selected = 1;break;}}if (j == in_group.length){in_group.length = j + 1;in_group.options[j].text = memberName;in_group.options[j].selected = 1;}}inGrpItems = in_group.length;}function OnMoveOut(sInGroup,sOutGroup){in_group=document.getElementById(sInGroup);out_group =document.getElementById(sOutGroup);var toRemoveCount = 0;var i,j;for (var i = 1; i < in_group.length; i++){if (in_group.options[i].selected == 1){toRemoveCount++;}}var arrayIdx = 0;var toRemainArray = new makeArray(in_group.length - toRemoveCount);var toRemoveArray = new makeArray(toRemoveCount);toRemainArray[arrayIdx++] = in_group.options[0].text;j=0;for (var i = 1; i < in_group.length; i++){if (in_group.options[i].selected == 1){in_group.options[i].selected = 0;if (j < toRemoveCount)toRemoveArray[j++] =in_group.options[i].text;}	elsetoRemainArray[arrayIdx++] = in_group.options[i].text;}in_group.length = arrayIdx;in_group.options[0].text = toRemainArray[0];var szSetValueArray;for (var i = 0; i < toRemainArray.length; i++){szSetValueArray = toRemainArray[i].split('##');in_group.options[i].text = szSetValueArray[0];in_group.options[i].value = szSetValueArray[1]+'##'+szSetValueArray[2];}for (j = 0; j < out_group.length; j++)out_group.options[j].selected = 0;for (var i = 0; i < toRemoveCount; i++){for (j = 0; j < out_group.length; j++){if (out_group.options[j].text == toRemoveArray[i]){out_group.options[j].selected = 1;break;}}if (j == out_group.length){out_group.length = j + 1;out_group.options[j].text = toRemoveArray[i];out_group.options[j].selected = 1;}}inGrpItems = in_group.length;}function OnSendGrasMoveIn(formname,sInGroup,sOutGroup,sTimeobj){oForm=document.getElementById(formname);if( !WnmSubmit(oForm) ){return false;}	in_group=document.getElementById(sInGroup);out_group =document.getElementById(sOutGroup);ulTimeValue = document.getElementById(sTimeobj).value;var toMoveCount = 0;for (var i = 1; i < out_group.length; i++){if (out_group.options[i].selected == 1)toMoveCount++;}var arrayIndex = 0;var toMoveArray = new makeArray(toMoveCount);var toRemainArray = new makeArray(out_group.length - toMoveCount);toRemainArray[arrayIndex++] = out_group.options[0].text;var j=0;for (var i = 1; i < out_group.length; i++){if (out_group.options[i].selected == 1){out_group.options[i].selected = 0;if (j < toMoveCount){toMoveArray[j++] = out_group.options[i].value+'##'+ulTimeValue;}}	else{toRemainArray[arrayIndex++] = out_group.options[i].value;}}if (toMoveArray.length > 0){for (i = 0; i < in_group.length; i++)in_group.options[i].selected = 0;}var j;var memberName;var InterfaceArray;for (var i = 0; i < toMoveArray.length; i++){memberName = toMoveArray[i];InterfaceArray = memberName.split("##");for (j = 0; j < in_group.length; j++){			if (in_group.options[j].value == memberName){in_group.options[j].selected = 1;break;}}if (j == in_group.length){in_group.length = j + 1;in_group.options[j].text = InterfaceArray[0]+'('+InterfaceArray[2]+ms+')';in_group.options[j].value = toMoveArray[i];in_group.options[j].selected = 1;}}out_group.length = arrayIndex;var szTempArray;out_group.options[0].text = toRemainArray[0];for (var i = 1; i < toRemainArray.length; i++){szTempArray = toRemainArray[i].split('##');out_group.options[i].text = szTempArray[0];		out_group.options[i].value =  toRemainArray[i];}inGrpItems = in_group.length;}function OnSendGrasMoveOut(sInGroup,sOutGroup){in_group=document.getElementById(sInGroup);out_group =document.getElementById(sOutGroup);var toRemoveCount = 0;var i,j;for (var i = 1; i < in_group.length; i++){if (in_group.options[i].selected == 1){toRemoveCount++;}}var arrayIdx = 0;var toRemainArray = new makeArray(in_group.length - toRemoveCount);var toRemoveArray = new makeArray(toRemoveCount);toRemainArray[arrayIdx++] = in_group.options[0].text;j=0;var szValueArray;for (var i = 1; i < in_group.length; i++){szValueArray = in_group.options[i].value.split("##");if (in_group.options[i].selected == 1){in_group.options[i].selected = 0;if (j < toRemoveCount){toRemoveArray[j++] =szValueArray[0] +'##'+szValueArray[1];}}	else{toRemainArray[arrayIdx++] = in_group.options[i].value;}}in_group.length = arrayIdx;var szTempArray;in_group.options[0].text = toRemainArray[0];for (var i = 1; i < toRemainArray.length; i++){szTempArray = toRemainArray[i].split('##');in_group.options[i].text = szTempArray[0]+'('+szTempArray[2]+ms+')';in_group.options[i].value =  toRemainArray[i];}for (j = 0; j < out_group.length; j++)out_group.options[j].selected = 0;var szTempOut;for (var i = 0; i < toRemoveCount; i++){szTempOut = toRemoveArray[i].split('##');for (j = 0; j < out_group.length; j++){if (out_group.options[j].text == szTempOut[0]){out_group.options[j].selected = 1;break;}}if (j == out_group.length){out_group.length = j + 1;out_group.options[j].text = szTempOut[0];			out_group.options[j].value= toRemoveArray[i];out_group.options[j].selected = 1;}}inGrpItems = in_group.length;}function OnARPGraLearnSubmit(oForm){var ulLearnstatus = 1;var ulSendstatus = 0;if( !WnmSubmit(oForm) ){return false;}	if (true == document.getElementById("id_arpgralearn_enable").checked){				ulLearnstatus = 0;}if (true == document.getElementById("id_arpgrasendnotsame_enable").checked){				ulSendstatus = 1;}var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule = oRequest.AddModule("arp").AddSubModule("arp");oSubModule.AddTable("gralearn-table").AddField("status",ulLearnstatus); oSubModule.AddTable("grasendnotsame-table").AddField("status",ulSendstatus); oRequest.SendPostRequest("/wcn/arp/modify_sub.x");return false;}function OnARPDtcVlanMoveIn(sInGroup,sOutGroup){in_group=document.getElementById(sInGroup);out_group =document.getElementById(sOutGroup);var toMoveCount = 0;for (var i = 1; i < out_group.length; i++){if (out_group.options[i].selected == 1)toMoveCount++;}if ((in_group.length + toMoveCount - 1) > DtcMaxVlanNum){alert(sVlanmax);return false;}var arrayIndex = 0;var toMoveArray = new makeArray(toMoveCount);var toRemainArray = new makeArray(out_group.length - toMoveCount);toRemainArray[arrayIndex++] = out_group.options[0].text;var j=0;for (var i = 1; i < out_group.length; i++){if (out_group.options[i].selected == 1){out_group.options[i].selected = 0;if (j < toMoveCount){			  toMoveArray[j++] = out_group.options[i].value;}}	else{toRemainArray[arrayIndex++] = out_group.options[i].value;}}if (toMoveArray.length > 0){for (i = 0; i < in_group.length; i++)in_group.options[i].selected = 0;}var j;var memberName;for (var i = 0; i < toMoveArray.length; i++){for (j = 1; j < in_group.length; j++){			if (in_group.options[j].value == toMoveArray[i]){in_group.options[j].selected = 1;break;}}if (j == in_group.length){in_group.length = j + 1;in_group.options[j].text = toMoveArray[i];in_group.options[j].value = toMoveArray[i];in_group.options[j].selected = 1;}}out_group.length = arrayIndex;out_group.options[0].text = toRemainArray[0];for (var i = 1; i < toRemainArray.length; i++){out_group.options[i].text = toRemainArray[i];		out_group.options[i].value =  toRemainArray[i];}inGrpItems = in_group.length;}function OnARPDtcVlanMoveOut(sInGroup,sOutGroup){in_group=document.getElementById(sInGroup);out_group =document.getElementById(sOutGroup);var toRemoveCount = 0;var i,j;for (var i = 1; i < in_group.length; i++){if (in_group.options[i].selected == 1){toRemoveCount++;}}var arrayIdx = 0;var toRemainArray = new makeArray(in_group.length - toRemoveCount);var toRemoveArray = new makeArray(toRemoveCount);toRemainArray[arrayIdx++] = in_group.options[0].text;j=0;for (var i = 1; i < in_group.length; i++){if (in_group.options[i].selected == 1){in_group.options[i].selected = 0;if (j < toRemoveCount){toRemoveArray[j++] =in_group.options[i].value;}}	else{toRemainArray[arrayIdx++] = in_group.options[i].value;}}in_group.length = arrayIdx;for (var i = 0; i < toRemainArray.length; i++){in_group.options[i].text = toRemainArray[i];		in_group.options[i].value =  toRemainArray[i];}for (j = 0; j < out_group.length; j++)out_group.options[j].selected = 0;for (var i = 0; i < toRemoveCount; i++){for (j = 1; j < out_group.length; j++){if (out_group.options[j].text == toRemoveArray[i]){out_group.options[j].selected = 1;break;}}if (j == out_group.length){out_group.length = j + 1;out_group.options[j].text = toRemoveArray[i];			out_group.options[j].value= toRemoveArray[i];out_group.options[j].selected = 1;}}inGrpItems = in_group.length;}function OnARPDtctrustMoveIn(sInGroup,sOutGroup){in_group=document.getElementById(sInGroup);out_group =document.getElementById(sOutGroup);var toMoveCount = 0;for (var i = 1; i < out_group.length; i++){if (out_group.options[i].selected == 1)toMoveCount++;}var arrayIndex = 0;var toMoveArray = new makeArray(toMoveCount);var toRemainArray = new makeArray(out_group.length - toMoveCount);toRemainArray[arrayIndex++] = out_group.options[0].text;var j=0;for (var i = 1; i < out_group.length; i++){if (out_group.options[i].selected == 1){out_group.options[i].selected = 0;if (j < toMoveCount){			  toMoveArray[j++] = out_group.options[i].value;}}	else{toRemainArray[arrayIndex++] = out_group.options[i].value;}}if (toMoveArray.length > 0){for (i = 0; i < in_group.length; i++)in_group.options[i].selected = 0;}var j;var memberName;var valueArray;for (var i = 0; i < toMoveArray.length; i++){for (j = 1; j < in_group.length; j++){			if (in_group.options[j].value == toMoveArray[i]){in_group.options[j].selected = 1;break;}}if (j == in_group.length){valueArray = toMoveArray[i].split('##');in_group.length = j + 1;in_group.options[j].text = valueArray[0];in_group.options[j].value = toMoveArray[i];in_group.options[j].selected = 1;}}out_group.length = arrayIndex;out_group.options[0].text = toRemainArray[0];for (var i = 1; i < toRemainArray.length; i++){valueArray = toRemainArray[i].split('##');out_group.options[i].text = valueArray[0];		out_group.options[i].value =  toRemainArray[i];}inGrpItems = in_group.length;}function OnARPDtctrustMoveOut(sInGroup,sOutGroup){in_group=document.getElementById(sInGroup);out_group =document.getElementById(sOutGroup);var toRemoveCount = 0;var i,j;for (var i = 1; i < in_group.length; i++){if (in_group.options[i].selected == 1){toRemoveCount++;}}var arrayIdx = 0;var toRemainArray = new makeArray(in_group.length - toRemoveCount);var toRemoveArray = new makeArray(toRemoveCount);toRemainArray[arrayIdx++] = in_group.options[0].text;j=0;for (var i = 1; i < in_group.length; i++){if (in_group.options[i].selected == 1){in_group.options[i].selected = 0;if (j < toRemoveCount){toRemoveArray[j++] =in_group.options[i].value;}}	else{toRemainArray[arrayIdx++] = in_group.options[i].value;}}in_group.length = arrayIdx;var valueArray;in_group.options[0].text = toRemainArray[0];for (var i = 1; i < toRemainArray.length; i++){valueArray= toRemainArray[i].split('##');in_group.options[i].text = valueArray[0];		in_group.options[i].value = toRemainArray[i];}for (j = 0; j < out_group.length; j++)out_group.options[j].selected = 0;for (var i = 0; i < toRemoveCount; i++){for (j = 1; j < out_group.length; j++){if (out_group.options[j].value == toRemoveArray[i]){out_group.options[j].selected = 1;break;}}if (j == out_group.length){out_group.length = j + 1;valueArray = toRemoveArray[i].split('##');out_group.options[j].text = valueArray[0];			out_group.options[j].value= toRemoveArray[i];out_group.options[j].selected = 1;}}inGrpItems = in_group.length;}function onARPDtcSubmit(oForm){var i;var j;var vlanid;var valueArray;var chksrcmac = 0;var chkdstmac = 0;var chkip = 0;var sInVlanGroup = 'id_inVlanGroup';var sOutVlanGroup='id_outVlanGroup';var sInTrustGroup = 'id_trustinterface';var sOutTrustGroup='id_nottrustinterface';var sEnableVlanDel;var sEnableVlanAdd = new Array();var sTrustIfDel;var sTrustIfAdd = new Array();var invlan_group=document.getElementById(sInVlanGroup);var intrust_group=document.getElementById(sInTrustGroup);if( !WnmSubmit(oForm) ){return false;}	var oSendMsg = GetQueue(window); oSendMsg.Reset("url::/wcn/frame/menu?module=arp&func=OnARPDetection()");   var sURLHead = "url::/wcn/arp/modify_sub.x?xml="; var orow;sEnableVlanDel = CurDtcEnabledVlanArray.concat();   for( j = 1; j < invlan_group.length; j++)           {sEnableVlanAdd[j-1] = new Object();        sEnableVlanAdd[j-1].vlanid = invlan_group.options[j].value;}if(( 0 < sEnableVlanDel.length ) && ( 0 < sEnableVlanAdd.length )){for(i = 0; i < sEnableVlanDel.length; i++){for( j = 0; j < sEnableVlanAdd.length; j++){if ( sEnableVlanDel[i].vlanid == sEnableVlanAdd[j].vlanid ){sEnableVlanDel[i].vlanid = 0;sEnableVlanAdd[j].vlanid = 0;}}}}for ( i = 0; i < sEnableVlanDel.length; i++ ){if ( 0 != sEnableVlanDel[i].vlanid ){var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule = oRequest.AddModule("arp").AddSubModule("arpdtc");var oTablevlan = oSubModule.AddTable("arpdtcvlanenable-table");oTablevlan.AddRow().AddField("vlanid",sEnableVlanDel[i].vlanid).AddField("status",0);oSendMsg.AddMsg(sURLHead + oRequest.MakeXmlString(),strDtcSetVLANING);}}for ( j = 0; j < sEnableVlanAdd.length; j++){if ( 0 != sEnableVlanAdd[j].vlanid ){	var oRequest1 = new XmlRequest(XCMP_ACTION_CLI);var oSubModule1 = oRequest1.AddModule("arp").AddSubModule("arpdtc");	          	var oTablevlan1 = oSubModule1.AddTable("arpdtcvlanenable-table");		oTablevlan1.AddRow().AddField("vlanid",sEnableVlanAdd[j].vlanid).AddField("status",1);oSendMsg.AddMsg(sURLHead + oRequest1.MakeXmlString(),strDtcSetVLANING);}	}sTrustIfDel = CurDtcTrustPortArray.concat();   for( j = 1; j < intrust_group.length; j++)           {sTrustIfAdd[j-1] = new Object();valueArray=intrust_group.options[j].value.split('##');sTrustIfAdd[j-1].ifindex = valueArray[1];}if(( 0 < sTrustIfDel.length ) && ( 0 < sTrustIfAdd.length )){for(i = 0; i < sTrustIfDel.length; i++){for( j = 0; j < sTrustIfAdd.length; j++){if ( sTrustIfDel[i].ifindex == sTrustIfAdd[j].ifindex ){sTrustIfDel[i].ifindex = 0;sTrustIfAdd[j].ifindex = 0;}}}}for ( i = 0; i < sTrustIfDel.length; i++ ){if ( 0 != sTrustIfDel[i].ifindex ){var oRequest2 = new XmlRequest(XCMP_ACTION_CLI);var oSubModule2 = oRequest2.AddModule("arp").AddSubModule("arpdtc");var oCurTrustTable = oSubModule2.AddTable("arpdtctrustif-table");oCurTrustTable.AddRow().AddField("ifindex",sTrustIfDel[i].ifindex).AddField("status",0);oSendMsg.AddMsg(sURLHead + oRequest2.MakeXmlString(),strDtcSettrust);}}for ( j = 0; j < sTrustIfAdd.length; j++){if ( 0 != sTrustIfAdd[j].ifindex ){	var oRequest3 = new XmlRequest(XCMP_ACTION_CLI);var oSubModule3 = oRequest3.AddModule("arp").AddSubModule("arpdtc");                var oTrustTable = oSubModule3.AddTable("arpdtctrustif-table");oTrustTable.AddRow().AddField("ifindex",sTrustIfAdd[j].ifindex).AddField("status",1);oSendMsg.AddMsg(sURLHead + oRequest3.MakeXmlString(),strDtcSettrust);}	}	if (true == document.getElementById("id_arpdtc_chksrcmac").checked){				chksrcmac = 1;}	if (true == document.getElementById("id_arpdtc_chkdstmac").checked){				chkdstmac = 1;}	if (true == document.getElementById("id_arpdtc_chkip").checked){				chkip = 1;}	{var oRequest4 = new XmlRequest(XCMP_ACTION_CLI);var oSubModule4 = oRequest4.AddModule("arp").AddSubModule("arpdtc");	          	var oTableCheck = oSubModule4.AddTable("arpdtcvalidchk-table");oTableCheck.AddRow().AddField("dstmac",1).AddField("status", chkdstmac);oTableCheck.AddRow().AddField("srcmac",1).AddField("status", chksrcmac);oTableCheck.AddRow().AddField("ip",1).AddField("status", chkip);oSendMsg.AddMsg(sURLHead + oRequest4.MakeXmlString(),strDtcSetpktchk);}oSendMsg.Start();return false;}function OnARPAntiSubmit(oForm){var status = 0;var oRow = null;var ulAge=0;var ulThreshold=0;var omodule;if( !WnmSubmit(oForm) ){return false;}	var oFirstForm = document.getElementById("id_fixmacform");if( !WnmSubmit(oFirstForm) ){return false;}	if (true == document.getElementById("id_arpactiveack_enable").checked){				status = 1;}var oRequest = new XmlRequest(XCMP_ACTION_CLI);omodule = oRequest.AddModule("arp");var oSubModule = omodule.AddSubModule("activeack");oSubModule.AddTable("activeack-table").AddField("status",status);var oSubModulesrc = omodule.AddSubModule("fixmacchk");var oTable = oSubModulesrc.AddTable("chkmode-table");if (0 == document.getElementById("id_arpantimode").value){oTable.AddRow().AddField("filter",1).AddField("mode",1).AddField("status", 1);oTable.AddRow().AddField("mode",1).AddField("monitor",1).AddField("status", 1)		  }else  if (1 == document.getElementById("id_arpantimode").value){oTable.AddField("filter",1).AddField("mode",1).AddField("status", 0);	}else{oTable.AddField("monitor",1).AddField("mode",1).AddField("status", 0);	}ulAge = document.getElementById("text_agingtime").value;ulThreshold = document.getElementById("text_threshold").value;oSubModulesrc.AddTable("aging-table").AddField("curvalue",ulAge).AddField("defaultage").AddField("status",0);oSubModulesrc.AddTable("threshhold-table").AddField("curvalue",ulThreshold).AddField("default").AddField("status",0);status = 0;if (true == document.getElementById("id_arpsrccheck_enable").checked){				status = 1;}var ovalidModule = omodule.AddSubModule("validcheck");ovalidModule.AddTable("validcheck-table").AddField("status",status); oRequest.SendPostRequest("/wcn/arp/modify_sub.x");return false; }function OnARPAntiStaticSubmit(oForm){if(!WnmSubmit(oForm)){return false;}var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule = oRequest.AddModule("arp").AddSubModule("fixmacchk");var mac = document.getElementById("text_mac").value;oSubModule.AddTable("mac-table").AddField("mac",mac).AddField("status",0);	    oRequest.SendPostRequest("/wcn/arp/modify_sub.x");return false;}function onARPAntiShowAddStatic(sObj){var showfiled = document.getElementById(sObj);if(showfiled.style.display == ""){showfiled.style.display = "none";}else{showfiled.style.display = "";}}function onARPAntiStaticDelSel(){var oRequest = new XmlRequest(XCMP_ACTION_CLI);var oSubModule;var oTable;var i;var oSelRows = ostaticAntiMAC.GetSelectedRows();var nSelCount = oSelRows.length;var mac;var orow;if(0 == nSelCount){alert(top.RS_NONE_SELECTED);return false;}if(!confirm(top.RS_DELETE_ONE)){return false;}oSubModule = oRequest.AddModule("arp").AddSubModule("fixmacchk");oTable = oSubModule.AddTable("mac-table");for(i = 0; i < nSelCount; i++){mac = oSelRows[i].GetCellText(1);orow = oTable.AddRow();orow.AddField("mac",mac);orow.AddField("status",1);}return oRequest.SendPostRequest("/wcn/arp/modify_sub.x");}function ARP_WinOutputExpendHtml(object,sContentID, sTitle){var sObjectInner ="<div id=Div_'"+sContentID+"'><span onclick=\"WinChangeExpandStatus(window,this,'"+sContentID+"')\"";sObjectInner += " style=\"cursor:hand;cursor:pointer;display:inline;\"><span style=\"";sObjectInner +=	"font-family: Courier New;font-size:150%;font-weight:900;\"><img src=\"../../skin/custom/private/query_close.gif\"/></span>";sObjectInner += sTitle;sObjectInner += "</span></div>";document.getElementById(object).innerHTML = sObjectInner;}