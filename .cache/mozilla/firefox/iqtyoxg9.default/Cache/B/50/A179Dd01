var MEventId = {ADD_DATA_COL : 1100,APPEND_DATAS : 1101,DATA_READY   : 1102,REDRAW  : 2001,DISABLE : 2002,CREATE  : 2003,UPDATE  : 2004,SAVE    : 2005,RESUME  : 2006,SEARCH  : 2007,SORT    : 2008,SHOW    : 2009,MAKEHEAD : 2010,CONDATA    : 2011,NEWROW : 2012,GET_DOM_OBJECT : 3001,DATA_ADD : 4001,DATA_DEL : 4002,DATA_MDF : 4003,MAX:0xFFFFFFFF}    var gMlist2Moudles ={query:      MSearch,sort:         MSort,groupby:   Group,page:        CreatePage,mode:       MMode,oprations:  Operation,buttons:     FootButtons,getnext:     GetNext};var gMlist2Ctypes = {text:              {buildCol:     textConstruct,valueMember:"value"},a:                 {buildCol:    aConstruct,valueMember:"innerHTML"},img:              {buildCol:     imageConstruct,valueMember:"innerHTML"},input:            {buildCol:     inputConstruct,valueMember:"value"},select:        {buildCol:     selectConstruct,valueMember:"value"},checkbox:       {buildCol:     checkboxConstruct,valueMember:"checked"},radio:             {buildCol:     radioConstruct,valueMember:"checked"},datetime:        {buildCol:     dateConstruct,valueMember:"value"},progress:         {buildCol:     progressConstruct,valueMember:"innerHTML"},custom:          {buildCol:      customConstruct,valueMember:null}};                              var gMlist2Images = {MDF:         "icon_mdf.gif",DTL:          "icon_dtl.gif",START:        "icon_start.gif",STOP:         "icon_stop.gif",REBOOT:      "icon_reboot.gif",DISCONN:      "icon_disconnection.gif",DEL:          "icon_del.gif",ROWEDIT:      "icon_editline.gif",APPLY:        "btn_ok.gif",CANCEL:       "btn_close.gif",BIND:         "icon_bind.gif",ADV:          "icon_advanced.gif",ADD:          "icon_new.gif",LOADING:      "loading.gif"};function TranslateMList(sId, pfGroupBy, bShowNo, nLimit,options){options = options || {};sId = sId.replace(/-/g,'_');var oMlist = document.getElementById("Mlist2_"+sId);if ( null == oMlist ){return null;}var option = {pfGroupBy:null, bShowNo:false, bMakeTabTail:true};if(null != pfGroupBy && "object" == typeof(pfGroupBy)){for(var i in pfGroupBy) option[i] = pfGroupBy[i];}else{if(null != pfGroupBy && "function" == typeof(pfGroupBy)) option.pfGroupBy = pfGroupBy;if(null != bShowNo && "boolean" == typeof(bShowNo)) option.bShowNo = bShowNo;if(null != nLimit) option.nLimit = nLimit;}var oMlistInfo = eval("makeMlist2Header"+sId+"()");if (typeof(oMlistInfo.oGlobal.groupby) == "object"){oMlistInfo.oGlobal.groupby.pfGroupBy = option.pfGroupBy;}if(typeof(oMlistInfo.oGlobal.getnext) == "object"){oMlistInfo.oGlobal.getnext.nLimit = option.nLimit;}oMlistInfo.oMainDiv.innerHTML = "";oMlist = new MList2(oMlistInfo.oMainDiv, sId);if(option.bMakeTabTail == true){oMlistInfo.oGlobal.page = {mlistId:sId};}for (var i in oMlistInfo.oGlobal){oMlist.AddModule(i, oMlistInfo.oGlobal[i]);}for (var i in oMlistInfo.aColumns){if (oMlistInfo.aColumns[i].display != "false"){oMlist.AddDataCol(oMlistInfo.aColumns[i]);}}oMlist.AddDatas(eval("makeMlist2Data"+sId+"(oMlistInfo.aColumns)"));oMlist.Show();SaveMlistToGlobal (sId, oMlist);return oMlist;}function SaveMlistToGlobal (arrSId, oSave){var oMlistSave = top.Frame.load("MLIST2_SAVE");if(!oMlistSave){oMlistSave = {};top.Frame.save("MLIST2_SAVE",oMlistSave);}if (!oMlistSave["MListArr_" + TABID]){oMlistSave["MListArr_" + TABID] = {};}oMlistSave["MListArr_" + TABID][arrSId] = oSave;return true;}function GetMlistSave (arrSId){var oMlistSave = top.Frame.load("MLIST2_SAVE");var oSave = null;if (oMlistSave && oMlistSave["MListArr_" + TABID]){oSave = oMlistSave["MListArr_" + TABID][arrSId];}return oSave;}function ClearMListStatus(arrSId,bForce){if(!bForce && (top.g_ActionFrom == top.ACTION_FROM_NORMAL || (top.g_ActionFrom & top.ACTION_FROM_AUTO))){return false;}if (!arrSId){top.Frame.save("MLIST2_SAVE", null);}else{arrSId = arrSId.replace(/-/g,'_');SaveMlistToGlobal (arrSId, null);}return true;}function SaveMListStatus(){    var oMlistSave = top.Frame.load("MLIST2_SAVE");if(oMlistSave && typeof(TABID) != "undefined" && TABID){var arrSIdList = oMlistSave["MListArr_" + TABID];if(typeof(arrSIdList) != "undefined" && arrSIdList != null){var sMList = null;for(sMList in arrSIdList){if(arrSIdList[sMList] != null && arrSIdList[sMList].SaveCurrentState){arrSIdList[sMList].SaveCurrentState();arrSIdList[sMList] = sMList;}}}}return true;}function MList2 (oContainer, sId){var oControler;var oSelf = this;function create(){oControler = new ControlLayer(this);this.GetCellText = getCellText;this.SetCellText = setCellText;this.GetLastRowData = getLastRowData;this.AppendRow = appendRow;this.SetDisable = setDisable;this.AddDataCol = addDataCol;this.Show = show;this.DelRow = delRow;    this.SaveCurrentState = save;this.ResumeCurrentState = resume;this.GetRowAttribute = getRowAttribute;this.AddDatas = oControler.appendDatas;this.ReDraw = oControler.reDraw;this.SetAutoDraw = oControler.setAutoRedraw;this.AddModule = oControler.addModule;this.GetCurPageRows = oControler.getCurPageRows;this.ClearDatas = oControler.clearDatas;this.GetCount = oControler.getCount;this.GetRowObject = oControler.getRowObject;this.SetCtrlAttr = oControler.setCtrlAttr;}function setDisable(bDisable){oContainer.disabled = bDisable;return oControler.notify(MEventId.DISABLE, bDisable)>0;}function save(){var oSaved = {};oControler.notify(MEventId.SAVE,oSaved);top.Frame.save(TABID+"Mlist2_"+sId,oSaved);}function resume(){var oSaved = top.Frame.load(TABID+"Mlist2_"+sId);if(oSaved) oControler.notify(MEventId.RESUME,oSaved);}function show(){oControler.createTable(oContainer);if (GetMlistSave (sId) == sId){resume();}oControler.showTable();}function addDataCol(col){oControler.addCol(col, "data");}function getCellText (nRow, sCol){var aCurData = oControler.getCurData();var sValue;if (aCurData[nRow - 1]){sValue = aCurData[nRow - 1].GetCellText(sCol);}return sValue;}function setCellText(nRow, sCol, sValue){var aCurData = oControler.getCurData();if (aCurData[nRow - 1]){aCurData[nRow - 1].SetCellText(sCol, sValue);}        }function getLastRowData(){var aAllData = oControler.getAllRows();var oRow;if (aAllData.length > 0){oRow = aAllData[aAllData.length-1];}return oRow;}function appendRow(oRow){var aRows = [];aRows.push(oRow);oControler.appendDatas(aRows, true);return oRow;}function delRow(nRow){        return oControler.delRow(nRow, true);;}function getRowAttribute(nRow, sName){var oRow = oControler.getRowObject(nRow);var oAttribute = null;if (oRow){oAttribute = oRow.GetAttribute(sName);}return oAttribute;}create.apply(this);}MList2.prototype = new top.MyObject();MList2.prototype.NAME = "MList2";MList2.Rs = top.Resource.MList2;function ControlLayer (poMList2){var _oDataLayer, _oPaintLayer;var _oSelf = this;var _oUserArt = {};var _bAutoRedraw = true;var _bShow = false;var _bReDraw = false;var _oColMap = {head:[],data:[],foot:[]};function create(){_oDataLayer = new DataLayer ();_oPaintLayer = new PaintLayer (this);this._paras = {};    this.showTable = showTable;this.addCol = addCol;this.addModule = addModule;this.appendDatas = appendDatas;this.createTable = createTable;this.reDraw = reDraw;this.regUserInterface = regUserInterface;this.getColNameByIndex = getColNameByIndex;this.getColIndexByName = getColIndexByName;this.getMlist = getMlist;this.setAutoRedraw = setAutoRedraw;this.getAutoRedraw = getAutoRedraw;this.autoRedraw = autoRedraw;this.delRow = delRow;this.clearDatas = clearDatas;this.getColCount = getColCount;this.addToTFoot = _oPaintLayer.addToTFoot;this.addToTOpration = _oPaintLayer.addToTOpration;this.removeFromTOpration = _oPaintLayer.removeFromTOpration;this.rowRedraw = _oPaintLayer.rowRedraw;this.getAllRows = _oDataLayer.getData;this.getCurData = _oDataLayer.getCurData;this.setCurData = _oDataLayer.setCurData;this.curDataIsChange = _oDataLayer.curDataIsChange;this.setPageRows = _oDataLayer.setPageRows;this.getCurPageRows = _oDataLayer.getCurPageRows;this.dataOperation = _oDataLayer.dataOperation;this.setPageRange = _oDataLayer.setPageRange;this.getPageRange = _oDataLayer.getPageRange;this.getCurCount = _oDataLayer.getCurCount;this.getCount = _oDataLayer.getCount;this.getCurRows = _oDataLayer.getCurRows;this.getRowObject = _oDataLayer.getRowObject;this.getXmlData = _oDataLayer.getXmlData;this.setCtrlAttr = setCtrlAttr;}function createTable (poFather){var oMlist2Art = gMlist2Moudles;for (var i in oMlist2Art){if (typeof(_oUserArt[i]) != "undefined"){_oUserArt[i].obj = new oMlist2Art[i](_oSelf, _oUserArt[i]);}}_oPaintLayer.oFather = poFather;        _oSelf.notify(MEventId.DATA_READY, !("getnext" in _oUserArt));return top.EM.OK;}function showTable (){var ahead = [];for (var i in _oColMap){ahead = ahead.concat(_oColMap[i]);}_oDataLayer.setCurData(_oSelf.getAllRows());_oDataLayer.setPageRows(_oSelf.getAllRows());_oSelf.notify(MEventId.MAKEHEAD, ahead);_oSelf.notify(MEventId.CONDATA);_oSelf.notify(MEventId.SHOW);_oPaintLayer.showTable(_oDataLayer.getCurPageRows(), ahead);_oDataLayer.changeCurDataOver();if(window.OnPageChanged){window.OnPageChanged(poMList2, poMList2.GetCurrentPage);}_bShow = true;}function reDraw (){if (_bShow == true && _bReDraw == false){_bReDraw = true;_oPaintLayer.clearTable();_oDataLayer.setPageRows(_oSelf.getAllRows());_oSelf.notify(MEventId.CONDATA);_oSelf.notify(MEventId.SHOW);_oPaintLayer.reDraw(_oDataLayer.getCurPageRows());_oDataLayer.changeCurDataOver();if(window.OnPageChanged){window.OnPageChanged(poMList2, poMList2.GetCurrentPage);}_bReDraw = false;}   }function addModule(psName, poOption){_oUserArt[psName] = (typeof(poOption) == "undefined") ? "" : poOption;}function addCol(poCol, pType){_oColMap[pType].push(poCol);poCol.achild = [];poCol.aonclick = [];}function getColNameByIndex(i, pType){var oCol = _oColMap[pType][i-1];return oCol ? oCol.name : null;}function setCtrlAttr(col,name,value){var oCol;if(typeof(col) == "string"){iCol = _oSelf.getColIndexByName(col, "data");}oCol = _oColMap["data"][iCol - 1];if(!oCol || !oCol.ctrl){return;}oCol.ctrl.attributes[name] = value;}function getColCount(pType){var length = 0;if (_oColMap[pType]){length = _oColMap[pType].length;}else{for (var i in _oColMap){length += _oColMap[i].length;}}return length;}function getColIndexByName(sName, pType){var aCols = _oColMap[pType];var bFind = false;var i = 0;for (; i < aCols.length; i++){if (sName == aCols[i].name){bFind = true;break;}}return bFind ? (i+1) : null;}function setAutoRedraw(b){_bAutoRedraw = b;}function getAutoRedraw(){return _bAutoRedraw;}function autoRedraw(){if(_bAutoRedraw){reDraw ();}}function appendDatas(paDatas, pbAddToCur){var i, k;var aDatas = [];k = paDatas.length;for(i=0; i<k; i++){aDatas[i] = new RowObject();aDatas[i]._clone(paDatas[i]);aDatas[i].addOption("root", _oSelf);}_oDataLayer.appendDatas(aDatas, pbAddToCur);if(_bAutoRedraw){reDraw ();}else{_oSelf.notify(MEventId.DATA_ADD);}return top.EM.OK;}function delRow(nRow, pbAddToCur){var ret = _oDataLayer.delRow(nRow, pbAddToCur);if(_bAutoRedraw){reDraw ();}return ret;}function clearDatas(){var ret = _oDataLayer.clearDatas(_bAutoRedraw);if(_bAutoRedraw){reDraw ();}return ret;}function regUserInterface(sName, fFunc){poMList2[sName] = fFunc;}function getMlist(){return poMList2;}create.apply(this);}ControlLayer.prototype = new top.EM();ControlLayer.prototype.NAME = "ControlLayer";function DataLayer (pType){var _aShowRows = [];var _oDataSrc = new LocalDataSrc(this);function getCurPageRows (){return _aShowRows;}function setPageRows (paRows){_aShowRows = [];_aShowRows = _aShowRows.concat(paRows);}function LocalDataSrc(poDataLaryer){var _aData = [];var _aCurData = [];var oXmlData = null;var _bCurIsChange = false;var _nFrom = 0;var _nEnd = 0;function dataOperation(pTag, pMsg, pFunc){var aRows = pFunc(_aData, _aCurData, _bCurIsChange);if (typeof(aRows) == "object"){setCurData(aRows);}return top.EM.OK;}function getCount(){return _aData.length;}function getCurCount(){return _aCurData.length;}function getData(){return _aData;}function appendDatas(paData, pbAddToCur){if(paData.data){oXmlData = paData.data;paData.data = null;}_aData = _aData.concat(paData);if(true === pbAddToCur){_aCurData = _aCurData.concat(paData);_bCurIsChange = true;}}function getCurData (){return _aCurData;}function setCurData (paData){_aCurData = [];_aCurData = _aCurData.concat(paData);_bCurIsChange = true;return _aCurData;}function curDataIsChange (){return _bCurIsChange;}function changeCurDataOver (){_bCurIsChange = false;}function getXmlData(){return oXmlData;}function clear(){_aShowRows = null;_aData = null;_aCurData = null;oXmlData = null;_oDataSrc = null;}function setPageRange (pnFrom, pnEnd){_nFrom = pnFrom;_nEnd = pnEnd;}function getPageRange (){return {from:_nFrom, end:_nEnd}; }function clearDatas (pbAddToCur){_aData = [];if (pbAddToCur === true){_aCurData = [];}}function getCurRows(nForm, nLines){var aRows = [];var nLine = 0;for (var i = 0 ; aRows.length < nLines; i++){if(!_aCurData[i]){break;}if (_aCurData[i].getOption("show") != false){if (nLine >= nForm && ((nLine - nForm) < nLines)){aRows.push(_aCurData[i]);}            nLine++;}}return aRows;}function delRow (oRow, pbAddToCur){var bResult = false;var nIndex = _aData.length;var nLength = _aData.length;if (typeof(oRow) == "object"){for (var i = 0; i < _aData.length; i++){if (_aData[i] == oRow){nIndex = i; break;}}}else{nIndex = parseInt(oRow)-1;oRow = _aData[nIndex];}_aData.splice(nIndex,1);if (nLength > _aData.length){bResult = true;}if (pbAddToCur === true){for (var i = 0; i < _aCurData.length; i++){if (_aCurData[i] == oRow){nIndex = i; break;}}_aCurData.splice(nIndex,1);}return bResult;}function getRowObject(nRow){var oRow = _aData[nRow-1];return oRow ? oRow : null;}poDataLaryer.appendDatas = appendDatas;poDataLaryer.getCount = getCount;poDataLaryer.getCurData = getCurData;poDataLaryer.setCurData = setCurData;poDataLaryer.curDataIsChange = curDataIsChange;poDataLaryer.changeCurDataOver = changeCurDataOver;poDataLaryer.getData = getData;poDataLaryer.dataOperation = dataOperation;poDataLaryer.setPageRange = setPageRange;poDataLaryer.getPageRange = getPageRange;poDataLaryer.getCurCount = getCurCount;poDataLaryer.getXmlData = getXmlData;poDataLaryer.clear = clear;poDataLaryer.clearDatas = clearDatas;poDataLaryer.delRow = delRow;poDataLaryer.getCurRows = getCurRows;poDataLaryer.getRowObject = getRowObject;}this.setPageRows = setPageRows;this.getCurPageRows = getCurPageRows;}DataLayer.prototype = new top.MyObject();DataLayer.prototype.NAME = "DataLayer";function PaintLayer (){var oSelf = this;var oTable, oTOpration, oThead, oTheadRow, oTbody, oTfoot, aShowRows, aHeadCol;function create(){oTable = Frame.Util.createElement(window,"table",{className:'mlist',cellPading:'0',cellSpacing:'0',width:'100%'});oTOpration = Frame.Util.createElement(window,"div");oThead = Frame.Util.createElement(window,"thead");oTheadRow = Frame.Util.createElement(window,"tr");oTbody = Frame.Util.createElement(window,"tbody");oTfoot = Frame.Util.createElement(window,"div");aShowRows = [];aHeadCol = [];oTable.appendChild(oThead);oTable.appendChild(oTbody);oThead.appendChild(oTheadRow);this.showTable = showTable;this.getColCount = getColCount;this.clearTable = clearTable;this.addToTFoot = addToTFoot;this.rowRedraw = rowRedraw;this.addToTOpration = addToTOpration;this.removeFromTOpration = removeFromTOpration;this.reDraw = reDraw;this.clear = clear;}function addToTFoot (oObject){oTfoot.appendChild(oObject);}function addToTOpration (oObject){var oDev = Frame.Util.createElement(window,"div",null,{paddingRight:'3px',display:'inline'});if (oTOpration.firstChild){oDev.innerHTML = "| ";}oDev.appendChild(oObject);oTOpration.appendChild(oDev);}function removeFromTOpration (oObject){if (oObject.parentNode){oTOpration.removeChild(oObject.parentNode);}}function addCol (col){var oCol = Frame.Util.createElement(window,"th");var oNode = BuildCol(col);oCol.name = col.name;col.width = (col.width == "*" || col.width == "*%" ) ? "" :  col.width;col.width = ("datetime" == col.ctype) ? "180" : (col.width ? col.width : "");oCol.width = col.width;col.td = oCol;col.construct = addColCtype (col);if (oNode.constructor == String){oCol.innerHTML = oNode;}else{oCol.appendChild(oNode);}for (var i = 0; i < col.achild.length; i++){oCol.appendChild(col.achild[i]);}oTheadRow.appendChild(oCol);        return oCol;}function BuildCol(col){if (typeof (col.buildCol) == "undefined"){var aHref = Frame.Util.createElement(window,"span",null,null,col.text.trim());aHref.style.fontSize = "100%";if(col.aonclick.length != 0){aHref.className = "sort-on";aHref.onclick = onColClick(col);}return aHref;}else{return col.buildCol(col);}}function onColClick(col){return function(){for (var i = 0; i < aHeadCol.length; i++){if (aHeadCol[i].name == col.name){for (var j = 0; j < aHeadCol[i].aonclick.length; j++){aHeadCol[i].aonclick[j](col);}break;}}return false;}}function defaultConstruct(col){return function (oRow) {return (oRow.GetCellData(col.name))?oRow.GetCellData(col.name):"&nbsp;"};}function addColCtype (col){if (typeof(col.construct) == "undefined"){var oType = gMlist2Ctypes[col.ctype];return ((typeof(oType) == "object") ? oType.buildCol(col) : defaultConstruct(col));}else{return col.construct;}}function showTable (aRows, aHead){aShowRows = aShowRows.concat(aRows);makeHead (aHead);addRows (aShowRows);oTable.appendChild(oTbody);oSelf.oFather.appendChild(oTOpration);oSelf.oFather.appendChild(oTable);oSelf.oFather.appendChild(oTfoot);}function clearTable(){for (var i = 0; i < aShowRows.length; i++){aShowRows[i].addOption("paintRow", null);}aShowRows = [];oTable.removeChild(oTbody);oTbody = Frame.Util.createElement(window,"tbody");oTable.appendChild(oTbody);}function reDraw(aRows, aHead){if (typeof(aHead) != "undefined"){makeHead (aHead);}aShowRows = aShowRows.concat(aRows);addRows (aShowRows);oTable.appendChild(oTbody);}function makeHead (aHead){function appendColToHead (){for (var i = 0; i < aHead.length; i++){addCol (aHead[i]);}}aHeadCol = [];aHeadCol = aHeadCol.concat(aHead);oThead.removeChild(oTheadRow);oTheadRow = Frame.Util.createElement(window,"tr");oThead.appendChild(oTheadRow);appendColToHead ();return;}function getColCount(){return aHeadCol.length;}function drawRow(oRow){var oTr = Frame.Util.createElement(window,"tr");for (var j = 0; j < aHeadCol.length; j++){var oCell = Frame.Util.createElement(window,"td");oCell.width = aHeadCol[j].width;var oNode = aHeadCol[j].construct(oRow);if (oNode.constructor == String){oCell.innerHTML = oNode;}else if(Frame.Util.getType(oNode) == "Array"){oCell.innerHTML = oNode;}else{oCell.appendChild(oNode);}oTr.appendChild(oCell);}return oTr;}function addRows (aRows){for (var i = 0 ; i < aRows.length ; i++){var oRow = null;var sClassName = aRows[i].getOption("classname");if(typeof(aRows[i].getOption("cbuild")) != "undefined"){oRow = aRows[i].getOption("cbuild")(aRows[i]);}else{oRow = drawRow(aRows[i]);}if (oRow != null){if (sClassName){oRow.className = sClassName;}else{oRow.className = (((i%2) == 0) ? "row135" : "row246");}aRows[i].addOption("paintRow",oRow);oTbody.appendChild(oRow);}}}function rowRedraw(oRow){var sClassName = oRow.getOption("classname");if(typeof(oRow.getOption("cbuild")) == "undefined"){var oTr = oRow.getOption("paintRow");var oNewRow = drawRow(oRow);oTbody.replaceChild(oNewRow, oTr);if (sClassName){oNewRow.className = sClassName;}else{oNewRow.className = oTr.className;}oRow.addOption("paintRow",oNewRow);}}function clear(){aShowRows = null;aHeadCol = null;}create.apply(this);}PaintLayer.prototype = new top.MyObject();PaintLayer.prototype.NAME = "PaintLayer";function MMode (oControlLayer, psMode){var _oModeList = {multiple: multiple,single:    single};if (!_oModeList[psMode]){return;}var _oMode = new _oModeList[psMode](oControlLayer);function onRowChanged(oRow){if ( window.ctrlMListOnRowChanged ){window.ctrlMListOnRowChanged(oRow);}}function selectRow(param,bSelected){var mlist = oControlLayer.getMlist();var paramType = Frame.Util.getType(param);if(paramType == "Number"){var rowIndex = param;var rows = mlist.GetCurPageRows();var oRow = rows[rowIndex - 1];if(oRow == null){return null;}if(oRow.getOption("paintRow") == null){return null;}_oMode.select(oRow,bSelected);return oRow;}else{var count = oControlLayer.getCount();var oRow = null;for(var i = 0; i < count; i++){oRow = oControlLayer.getRowObject(i);if(oRow == null){continue;}if(oRow.getOption("paintRow") == null){continue;}if(paramType == "Function"){var result = paramType.call(null,oRow);if(result == true){_oMode.select(oRow,bSelected);}}else if(paramType == "Object"){if(oRow.GetCellData(param.name) == param.value){_oMode.select(oRow,bSelected);}}}return oRow;}}function single (oControlLayer){var _oSelectCell = null;var _oCol = null;this.select = doSelect;function create(){var col = {};_oCol = document.createTextNode(" ");col.construct = construct;col.buildCol = buildCol;col.width = "5px";oControlLayer.addCol(col,"head");oControlLayer.regCallBack(MEventId.SHOW, onShow, false, "Single");oControlLayer.regUserInterface("GetSelectedRows", getSelectedRows);oControlLayer.regUserInterface("GetSelCount", getSelCount);oControlLayer.regUserInterface("SelectRow", selectRow);}function onShow (){if (_oSelectCell != null){_oSelectCell.oRow.addOption("selected", false);_oSelectCell.checked = false;}_oSelectCell = null;return top.EM.OK;}function buildCol (){return _oCol;}function construct (oRow){var oCell = Frame.Util.createElement(window,"input",{type:'checkbox'});oCell.oRow = oRow;oCell.onclick = onSelect;oCell.oRow.addOption("selected", false);oCell.oRow.addOption("checkbox",oCell);if (oRow.getOption("checked")){oCell.defaultChecked = true;oCell.oRow.addOption("selected", true);if (_oSelectCell != null){_oSelectCell.oRow.addOption("selected", false);_oSelectCell.checked = false;}_oSelectCell = (oCell.checked == true) ? oCell : null;}return oCell;}function onSelect(bNotify){doSelect(this.oRow,this.checked);}function doSelect(oRow,checked){oRow.addOption("selected", (checked == true));if (_oSelectCell != null){_oSelectCell.oRow.addOption("selected", false);_oSelectCell.checked = false;}_oSelectCell = (checked == true) ? oRow.getOption("checkbox") : null;if(_oSelectCell != null) _oSelectCell.checked = checked;onRowChanged(oRow);}function getSelectedRows(){var arows =[];if (_oSelectCell != null){arows.push(_oSelectCell.oRow);}return arows;}function getSelCount(){return (_oSelectCell == null) ? 0 :1;}create();}function multiple (oControlLayer){var _aCels = [];var _oCol = null;var aDisabled = [_oCol];this.select = doSelect;function create(){var col = {};_oCol = Frame.Util.createElement(window,"input",{type:'checkbox'});_oCol.onclick = onSelectAll;col.construct = construct;col.buildCol = buildCol;col.width = "5px";oControlLayer.addCol(col,"head");oControlLayer.regCallBack(MEventId.SHOW, onShow, false, "Multiple");oControlLayer.regCallBack(MEventId.DISABLE, onDisable, false, this);oControlLayer.regUserInterface("GetSelectedRows", getSelectedRows);oControlLayer.regUserInterface("GetSelCount", getSelCount);oControlLayer.regUserInterface("SelectRow", selectRow);}function onShow (){_aCels = [];aDisabled = [_oCol];_oCol.checked = false;return top.EM.OK;}function onDisable(b){for(var i = 0; i < aDisabled.length; i++){aDisabled[i].disabled = b;}return top.EM.OK;}function buildCol (){return _oCol;}function onSelectAll(){for (var i = 0; i < _aCels.length; i++){_aCels[i].checked = _oCol.checked;_aCels[i].oRow.addOption("selected", _aCels[i].checked);onRowChanged(_aCels[i].oRow);}}function construct (oRow){var oCell = Frame.Util.createElement(window,"input",{type:'checkbox'});aDisabled.push(oCell);oCell.type = "checkbox";oCell.oRow = oRow;oCell.onclick = onSelect;oCell.oRow.addOption("selected", false);_aCels.push(oCell);if (oRow.getOption("checked")){oCell.defaultChecked = true;oCell.oRow.addOption("selected", true);}(getSelectedRows().length == _aCels.length) ? (_oCol.checked = true) : (_oCol.checked = false);return oCell;}function onSelect(bNotify){doSelect(this.oRow,this.checked);}function getSelectedRows(){var aRows = [];for (var i = 0; i < _aCels.length; i++){if (_aCels[i].checked == true){aRows.push(_aCels[i].oRow);}}return aRows;}function getSelCount(){return getSelectedRows().length;}function doSelect(oRow,checked){oRow.addOption("selected", (checked == true));for(var i = 0; i < _aCels.length; i++){if(_aCels[i].oRow == oRow){_aCels[i].checked = checked;break;}}(getSelectedRows().length == _aCels.length) ? (_oCol.checked = true) : (_oCol.checked = false);onRowChanged(oRow);}create();}}MMode.prototype = new top.MyObject();MMode.prototype.NAME = "MMode";function Operation (oControlLayer, oPeration){if (oPeration.opt.length == 0){return;}var aColumns = null;var bDisabled = false;var aOper = oPeration.opt;var oSelf = this;var oOptions =  {TEXT:         {text:    null},MDF:          {image: gMlist2Images["MDF"]},DTL:          {image: gMlist2Images["DTL"]},START:        {image: gMlist2Images["START"]},STOP:         {image: gMlist2Images["STOP"]},REBOOT:       {image: gMlist2Images["REBOOT"]},DISCONN:      {image: gMlist2Images["DISCONN"]},DEL:          {image: gMlist2Images["DEL"]},ROWEDIT:      {image:    gMlist2Images["ROWEDIT"], func: rowEdit},APPLY:        {image:    gMlist2Images["APPLY"]},CANCEL:       {image:    gMlist2Images["CANCEL"], func: cancelRowManage},BIND:         {image:  gMlist2Images["BIND"]},ADV:          {image:  gMlist2Images["ADV"]},ADD:          {image:  gMlist2Images["ADD"]},CUSTOM:       {image: null}};var oEditOper = [];function create(){var col = {};for(var i = 0; i < aOper.length; i++){if(aOper[i].type == "ROWEDIT"){var oApply = {};var oCancel = {};oApply.type = "APPLY";oApply.act = (function(){var editAction = (typeof(aOper[i]) == "undefined") ? "" : aOper[i].act;return function(oRow){var editValues = {};for (var i = 0; i< aColumns.length; i++){var oCol = aColumns[i];if (typeof(oCol.ctype) != "undefined" && oCol.ctype != ""){var valueMember = gMlist2Ctypes[oCol.ctype].valueMember;var ctrlValue;if(valueMember == null)valueMember = oCol.ctrl.valuefunc;if(typeof valueMember == "string"){var elem = oRow.GetCellObject(oCol.name).firstChild.firstChild;if(top.Form.check(window,[elem]) != true){return;}ctrlValue = elem[valueMember];}else{ctrlValue = valueMember.apply(null,[oRow]);}editValues[oCol.name] = ctrlValue;}}oRow.addOption("editValue",editValues);eval(editAction + "(oRow)")};})();oApply.des = MList2.Rs.RS_PAGE_OK;oCancel.type = "CANCEL";oCancel.des = MList2.Rs.RS_PAGE_CANCEL;oEditOper.push(oApply);oEditOper.push(oCancel);}}col.construct = construct;col.buildCol = buildCol;col.width = oPeration.width == "" ? 80 : oPeration.width;oControlLayer.addCol(col, "foot");oControlLayer.regCallBack(MEventId.DISABLE, onDisable, false, this);oControlLayer.regCallBack(MEventId.MAKEHEAD, onMakeHead, false, this);    }function rowEdit(oRow){oRow.addOption("state","row_edit");oControlLayer.notify(MEventId.DISABLE, true);oControlLayer.rowRedraw(oRow);}function cancelRowManage(oRow){oControlLayer.notify(MEventId.DISABLE, false);if(oRow.getOption("state") == "row_edit"){oRow.addOption("state",null);oControlLayer.rowRedraw(oRow);}else if(oRow.getOption("state") == "row_add"){oRow.addOption("state",null);oControlLayer.delRow(oRow,true);}}function buildCol (){var oCol = Frame.Util.createElement(window,"span",null,null,oPeration.text.trim());oCol.style.fontSize = "100%";return oCol;}function onDisable(b){bDisabled = b;return top.EM.OK;}function onMakeHead(aCols){aColumns = aCols;return top.EM.OK;}function construct (oRow){var oSpan, oImage;var oCell = Frame.Util.createElement(window,"div");var oCurOpt = aOper;if(oRow.getOption("state") == "row_edit" || oRow.getOption("state") == "row_add"){oCurOpt = oEditOper;}for (var i = 0; i < oCurOpt.length; i++){if(oRow.getOption("btnList") && oRow.getOption("btnList").indexOf("[" + (i + 1) + "]") != -1) continue;var oOpt = oOptions[oCurOpt[i].type];if (typeof(oOpt.text) != "undefined"){var value = (oOpt.text == null) ? oCurOpt[i].des : oOpt.text;var oSpan = Frame.Util.createElement(window,"span",{className:'page_link'},{display:'inline-block',whiteSpace:'nowrap'});oSpan.oRow = oRow;oSpan.oFunc = oCurOpt[i].act;oSpan.onclick = operAction;oSpan.innerHTML = "[" + value + "]";oCell.appendChild(oSpan);}if (typeof(oOpt.image) != "undefined"){var image = (oOpt.image == null) ? oCurOpt[i].value : oOpt.image;var oSpan = Frame.Util.createElement(window,"span",{className:'page_link'});var oImage = Frame.Util.createImage(window,{src:'../../images/'+image,alt:oCurOpt[i].des,title:oCurOpt[i].des});oSpan.oRow = oRow;if (typeof(oOpt.func) == "undefined"){oSpan.oFunc = oCurOpt[i].act;oSpan.onclick = operAction;}else{oSpan.oFunc = oOpt.func;oSpan.onclick = operAction;}oSpan.appendChild(oImage);oCell.appendChild(oSpan);}}return oCell;}function operAction(){if(bDisabled && (this.oRow.getOption("state") != "row_edit" && this.oRow.getOption("state") != "row_add")){return;}if (typeof(this.oFunc) == "function"){this.oFunc(this.oRow);}else{eval(this.oFunc+"(this.oRow)");}}create.apply(this);}Operation.prototype = new top.MyObject();Operation.prototype.NAME = "Operation";function FootButtons(oControlLayer, oButtons){if (oButtons.length == 0){return;}var oBtn;var bPageEdit = false;var aDisabled = {};var oSelf = this;var oCase;var oEditBtn = {apply:{type:'button', value:MList2.Rs.RS_PAGE_OK, action:cancelPageEdit},cancel:{type:'button', value:MList2.Rs.RS_PAGE_CANCEL, action:cancelPageEdit}};var oSystem = {pageEdit: pageEdit,createRow:createRow};function create(){oCase = Frame.Util.createElement(window,"div");oCase.align = "center";oControlLayer.regCallBack(MEventId.SHOW, onShow, false, oSelf);oControlLayer.regCallBack(MEventId.DISABLE, onDisable, false, oSelf);}function onShow(){displayButton();oControlLayer.addToTFoot(oCase);return top.EM.OK;}function onDisable(b){for(var key in aDisabled){aDisabled[key].disabled = b;}return top.EM.OK;}function pageEdit(){var aRows = oControlLayer.getCurPageRows();for(var i = 0; i < aRows.length; i++){aRows[i].addOption("state","page_edit");oControlLayer.rowRedraw(aRows[i]);}changeButton();oControlLayer.notify(MEventId.DISABLE, true);}function createRow(){var oRow = new RowObject();oRow.addOption("state","row_add");oControlLayer.appendDatas([oRow], true);oControlLayer.notify(MEventId.DISABLE, true);oControlLayer.notify(MEventId.NEWROW);oControlLayer.reDraw();return oRow;}function cancelPageEdit(){var aRows = oControlLayer.getCurPageRows();for(var i = 0; i < aRows.length; i++){aRows[i].addOption("state",null);oControlLayer.rowRedraw(aRows[i]);}displayButton();oControlLayer.notify(MEventId.DISABLE, false);}function valueToNumber(sValue){var s = [];for(var i = 0; i < sValue.length; i++){s.push("_");s.push(sValue.charCodeAt(i));}return s.join("");}function displayButton(){oCase.innerHTML = "";for(var i = 0; i < oButtons.length; i++){oBtn = Frame.Util.createElement(window,"input", oButtons[i]);if(oButtons[i].act != ""){oBtn.onclick = oSystem[oButtons[i].act];}else{oBtn.onclick = buttonAction(oButtons[i].onclick);}oCase.appendChild(oBtn);aDisabled[valueToNumber(oBtn.value)] = oBtn;}}function buttonAction (action){return function(){top.doAction(window, action);};}function changeButton(){oCase.innerHTML = "";for(var key in oEditBtn){oBtn = Frame.Util.createElement(window,"input",oEditBtn[key]);oBtn.onclick = oEditBtn[key]["action"];oCase.appendChild(oBtn);}}create();}FootButtons.prototype = new top.MyObject();FootButtons.prototype.NAME = "FootButtons";function MSort(oControlLayer,pSort){var oSortCb = {string: stringSort,number: numberSort,ip:     Frame.Util.ipToInteger,port:   Frame.Util.portToString};var aSortCols = {};var aSortOption = ["","",""];var bEvent = false;var bDataChanged = false;var bDisabled = false;var oAdvSort;var oSelf = this;function create(){if(pSort == "adv"){createAdv();}oControlLayer.regCallBack(MEventId.CONDATA, onConData, false, oSelf);oControlLayer.regCallBack(MEventId.SHOW, onShow, false, oSelf);oControlLayer.regCallBack(MEventId.SAVE, onSave, false, oSelf);oControlLayer.regCallBack(MEventId.RESUME, onResume, false, oSelf);oControlLayer.regCallBack(MEventId.MAKEHEAD, onMakeHead, false, oSelf);oControlLayer.regCallBack(MEventId.DISABLE, onDisable, false, oSelf);}function onMakeHead(aCols){aSortCols = {};for (var i = 0; i< aCols.length; i++){var oCol = aCols[i];if (typeof(oCol.type) != "undefined" && oCol.type != ""){var oSpan = Frame.Util.createElement(window, "span");var fFunc;if (oCol.pfnSortCb){fFunc = oCol.pfnSortCb;}else{fFunc = (typeof(oSortCb[oCol.type]) == "undefined") ? oSortCb["string"] : oSortCb[oCol.type];}aSortCols[oCol.name] = {text: oCol.text, func: fFunc, sDir: '', span: oSpan, keySq: null, keyGroup:null};oCol.achild.push(oSpan);oCol.aonclick.push(quickSort);if(oCol.sort != ""){aSortOption[0] = {name:oCol.name,type:oCol.sort};}}}return top.EM.OK;}function onConData(){if(aSortOption[0] != "" || aSortOption[1] != "" || aSortOption[2] != ""){oControlLayer.dataOperation("sort", "", sort);bEvent = false;}return top.EM.OK;}function onShow(){removeAllImage();if(aSortOption[0]) appendImage(aSortOption[0],"first");if(aSortOption[1]) appendImage(aSortOption[1],"second");if(aSortOption[2]) appendImage(aSortOption[2],"third");return top.EM.OK;}function onSave(oSaved){oSaved.sort = aSortOption;return top.EM.OK;}function onResume(oSaved){if(oSaved.sort){aSortOption = oSaved.sort;}return top.EM.OK;}function onDisable(b){bDisabled = b;if(oAdvSort){oAdvSort.disabled = b;if(b && oAdvSort.onclick){oAdvSort._onclick = oAdvSort.onclick;oAdvSort.onclick = null;}if(!b && oAdvSort._onclick){oAdvSort.onclick = oAdvSort._onclick;}}return top.EM.OK;}function normalSort(n1,n2){if(n1 > n2) return 1;else if(n1 < n2) return -1;else return 0;}function sort(paAllRows, paRows, bChange){bDataChanged = bChange;if (bChange == false && bEvent == false){return top.EM.OK;}paRows = customSort(paRows,0);oControlLayer.setPageRows (paRows);return paRows;}function customSort(paRows, pnLayer){var aKey = [];var oKeyGroup = null;var aKeySq = null;var aReturn = [];var nArrLength = paRows.length;var oSortName = aSortOption[pnLayer].name;var sSortType = aSortOption[pnLayer].type;var oNextItem = aSortOption[pnLayer + 1];var oSortCol = aSortCols[oSortName];if(bDataChanged == true){for(var key in aSortCols){aSortCols[key].keyGroup = null;aSortCols[key].keySq = null;}}else if(pnLayer > 0){oSortCol.keyGroup = null;oSortCol.keySq = null;}if(oSortCol.keyGroup){oKeyGroup = oSortCol.keyGroup;}else{oKeyGroup = {};for(var i = 0; i < nArrLength; i++){var key = oSortCol.func(paRows[i].GetCellText(aSortOption[pnLayer].name));if(!oKeyGroup[key]){oKeyGroup[key] = [];aKey.push(key);}oKeyGroup[key].push(paRows[i]);}}if(oSortCol.keySq){aKeySq = oSortCol.keySq;if(oSortCol.sDir != "" && oSortCol.sDir != sSortType){aKeySq = aKeySq.reverse();}}else{aKey.sort(function(n1,n2){var n = normalSort(n1,n2);if(aSortOption[pnLayer].type == "desc"){n = n * -1;}return n;});aKeySq = aKey;}if(pnLayer == 0){oSortCol.keyGroup = oKeyGroup;oSortCol.keySq = aKeySq;}var aKeyLen = aKeySq.length;for (var i = 0; i < aKeyLen; i++){var aTemRows = oKeyGroup[aKeySq[i]+""];if (aTemRows.length == 1 || !oNextItem){for(var j = 0; j < aTemRows.length; j++){aReturn.push(aTemRows[j]);}}else{aTemRows = customSort(aTemRows, pnLayer + 1);for(var j = 0; j < aTemRows.length; j++){aReturn.push(aTemRows[j]);}}}oSortCol.sDir = sSortType;aKey = null;oKeyGroup = null;aKeySq = null;return aReturn;}function stringSort(s){return s.toLowerCase();}function numberSort(n){return !isNaN(parseInt(n))?parseInt(n):0;}function quickSort(oCol){if(bDisabled) return;aSortOption[0] = {name: oCol.name, type: (aSortCols[oCol.name].sDir != "asc" ? "asc" : "desc")};aSortOption[1] = "";aSortOption[2] = "";bEvent = true;oControlLayer.notify(MEventId.SORT);oControlLayer.reDraw();}function sortAdv(oCol){var oTable = Frame.Widget.FWindow.createElement("table",null,{width:'280px'});var oTBody = Frame.Widget.FWindow.createElement("tbody");oTable.appendChild(oTBody);var oFirst = createRow(oTBody,MList2.Rs.RS_QUERY_FIRST,aSortOption[0],"first");var oSecond = createRow(oTBody,MList2.Rs.RS_QUERY_SECOND,aSortOption[1],"second");var oThird = createRow(oTBody,MList2.Rs.RS_QUERY_THIRD,aSortOption[2],"third");var sortWin = Frame.Widget.FWindow.open(Frame.Widget.FWindow.CUSTOM_WINDOW,sortCb,{title:MList2.Rs.RS_SORT_ADVANCE},oFirst,oSecond,oThird);var parentWin = sortWin.getInfoContent();parentWin.appendChild(oTable);sortWin.showWindow();}function sortCb(oFirst,oSecond,oThird){if(oFirst.sel.value == ""){alert(MList2.Rs.RS_SORT_ERR_EMPTY);return false;}if((oFirst.sel.value == oSecond.sel.value && oFirst.sel.value != "") ||(oFirst.sel.value == oThird.sel.value && oFirst.sel.value != "") ||(oSecond.sel.value == oThird.sel.value && oSecond.sel.value != "")){alert(MList2.Rs.RS_SORT_ERR_REPEAT);return false;}aSortOption[0] = {name: oFirst.sel.value, type: oFirst.asc.checked ? "asc" : "desc"};aSortOption[1] = oSecond.sel.value != "" ? {name: oSecond.sel.value, type: oSecond.asc.checked ? "asc" : "desc"} : "";aSortOption[2] = oThird.sel.value != "" ? {name: oThird.sel.value, type: oThird.asc.checked ? "asc" : "desc"} : "";bEvent = true;oControlLayer.notify(MEventId.SORT);oControlLayer.reDraw();}function createAdv(){oAdvSort = Frame.Util.createElement(window,"span",null,{color:'blue',cursor:'pointer'},MList2.Rs.RS_SORT_ADVANCE);oAdvSort.onclick = sortAdv;oControlLayer.addToTOpration(oAdvSort);}function appendImage(oSort,sq){var oSpan = aSortCols[oSort.name].span;oSpan.innerHTML = "";img = Frame.Util.createImage(window,{src:"../../images/sort_" + oSort.type + "_" + sq + ".gif"});oSpan.appendChild(img);}function removeAllImage(){for(var key in aSortCols){aSortCols[key].span.innerHTML = "";}}function createRow(oTBody,sText,oSort,sq){var oTR = Frame.Widget.FWindow.createElement("tr");var oTd = Frame.Widget.FWindow.createElement("td",{colspan:'2'},{fontSize:'12px'},sText);oTR.appendChild(oTd);oTBody.appendChild(oTR);oTR = Frame.Widget.FWindow.createElement("tr");oTd = Frame.Widget.FWindow.createElement("td",null,{width:'170px'});var oSel = Frame.Widget.FWindow.createElement("select",null,{width:'150px',marginLeft:'10px'});var option = Frame.Widget.FWindow.createElement("option",{text:'',value:''});oSel.options.add(option);for(var i in aSortCols){option = Frame.Widget.FWindow.createElement("option",{text:aSortCols[i].text,value:i});oSel.options.add(option);}oTd.appendChild(oSel);oTR.appendChild(oTd);oTd = Frame.Widget.FWindow.createElement("td",null,{fontSize:'12px'});var paramRadio1 = {name:sq,type:'radio',checked:'checked'},paramRadio2 = {name:sq,type:'radio'};if(oSort != ""){oSel.value = oSort.name;if(oSort.type == "desc"){paramRadio1 = {name:sq,type:'radio'};paramRadio2 = {name:sq,type:'radio',checked:'checked'};}else{paramRadio2 = {name:sq,type:'radio'};paramRadio1 = {name:sq,type:'radio',checked:'checked'};}}var radio1 = Frame.Widget.FWindow.createElement("input",paramRadio1);var br = Frame.Widget.FWindow.createElement("br");var radio2 = Frame.Widget.FWindow.createElement("input",paramRadio2);var img1 = Frame.Widget.FWindow.createElement("img",{src:"../../images/sort_asc_" + sq + ".gif"});var img2 = Frame.Widget.FWindow.createElement("img",{src:"../../images/sort_desc_" + sq + ".gif"});oTd.appendChild(radio1);oTd.appendChild(Frame.Widget.FWindow.createTextNode(MList2.Rs.RS_SORT_ASCEND));oTd.appendChild(img1);oTd.appendChild(br);oTd.appendChild(radio2);oTd.appendChild(Frame.Widget.FWindow.createTextNode(MList2.Rs.RS_SORT_DESCEND));oTd.appendChild(img2);oTR.appendChild(oTd);oTBody.appendChild(oTR);return {sel:oSel,asc:radio1};}create();}MSort.prototype = new top.MyObject();MSort.prototype.NAME = "MSort";function MSearch(oControlLayer, oSearch){if (oSearch != "true"){return;}var oSearchCols = {};var aDisabled = [];var bEvent = false;var oSearchParam = null;var oSelf = this;var oCurrCol;var oComInput;var oComSelect;var simpleTypeList = {string:"inc",ip:"inc",number:"=",valuelist:"invl"};var typeList = {string:{"=":{text:MList2.Rs.RS_QUERY_EQUAL},"!=":{text:MList2.Rs.RS_QUERY_NOTEQUAL},"^":{text:MList2.Rs.RS_QUERY_BEGINWITH},"!^":{text:MList2.Rs.RS_QUERY_NOTBEGINWITH},"$":{text:MList2.Rs.RS_QUERY_ENDWITH},"!$":{text:MList2.Rs.RS_QUERY_NOTENDWITH},"inc":{text:MList2.Rs.RS_QUERY_INCLUDE},"!inc":{text:MList2.Rs.RS_QUERY_EXCLUDE}},ip:{"=":{text:MList2.Rs.RS_QUERY_EQUAL},"!=":{text:MList2.Rs.RS_QUERY_NOTEQUAL},">":{text:MList2.Rs.RS_QUERY_MORETHAN, conversion:Frame.Util.ipToInteger},">=":{text:MList2.Rs.RS_QUERY_MOREEQUAL, conversion:Frame.Util.ipToInteger},"<":{text:MList2.Rs.RS_QUERY_LESSTHAN, conversion:Frame.Util.ipToInteger},"<=":{text:MList2.Rs.RS_QUERY_LESSEQUAL, conversion:Frame.Util.ipToInteger},"inc":{text:MList2.Rs.RS_QUERY_INCLUDE},"!inc":{text:MList2.Rs.RS_QUERY_EXCLUDE}},number:{"=":{text:MList2.Rs.RS_QUERY_EQUAL, conversion:function(n){return parseInt(n,10);}},"!=":{text:MList2.Rs.RS_QUERY_NOTEQUAL, conversion:function(n){return parseInt(n,10);}},">":{text:MList2.Rs.RS_QUERY_MORETHAN, conversion:function(n){return parseInt(n,10);}},">=":{text:MList2.Rs.RS_QUERY_MOREEQUAL, conversion:function(n){return parseInt(n,10);}},"<":{text:MList2.Rs.RS_QUERY_LESSTHAN, conversion:function(n){return parseInt(n,10);}},"<=":{text:MList2.Rs.RS_QUERY_LESSEQUAL, conversion:function(n){return parseInt(n,10);}}},valuelist:{"invl":{text:MList2.Rs.RS_QUERY_INCLUDE},"!invl":{text:MList2.Rs.RS_QUERY_EXCLUDE}}};function create(){createFace();oControlLayer.regCallBack(MEventId.CONDATA, onConData, false, oSelf);oControlLayer.regCallBack(MEventId.DATA_ADD, onConData, false, oSelf);oControlLayer.regCallBack(MEventId.SAVE, onSave, false, oSelf);oControlLayer.regCallBack(MEventId.RESUME, onResume, false, oSelf);oControlLayer.regCallBack(MEventId.MAKEHEAD, onMakeHead, false, oSelf);oControlLayer.regCallBack(MEventId.DISABLE, onDisable, false, oSelf);}function simpleSearch(oInput){oSearchParam = {};oSearchParam.oCurrCol = oCurrCol;var sortType = simpleTypeList[oSearchParam.oCurrCol.type];if(!sortType) sortType = "inc";oSearchParam.selFirstValue = sortType;oSearchParam.inputFirst = oInput.value;oSearchParam.checkCase = false;notifySearch();}function notifySearch(){bEvent = true;oControlLayer.notify(MEventId.SEARCH);oControlLayer.reDraw();}function search(paAllRows,paCurRows,pbChange){if(pbChange == false && bEvent == false){return top.EM.OK;}if(!oSearchParam.oCurrCol || oSearchParam.selFirstValue == "" || oSearchParam.inputFirst == ""){return paAllRows;            }var aSearchRows = (oSearchParam.checkResult) ? paCurRows : paAllRows;var aRows = [];var oFuncFactory = {"=":function(s1,s2){return (s2 == s1)},"!=":function(s1,s2){return (s2 != s1)},">":function(s1,s2){return (s2 > s1)},">=":function(s1,s2){return (s2 >= s1)},"<":function(s1,s2){return (s2 < s1)},"<=":function(s1,s2){return (s2 <= s1)},"^":function(s1,s2){return new RegExp("^" + toRegExpString(s1) + ".*$").test(s2)},"!^":function(s1,s2){return !new RegExp("^" + toRegExpString(s1) + ".*$").test(s2)},"$":function(s1,s2){return new RegExp("^.*" + toRegExpString(s1) + "$").test(s2)},"!$":function(s1,s2){return !new RegExp("^.*" + toRegExpString(s1) + "$").test(s2)},"inc":function(s1,s2){return new RegExp("^.*" + toRegExpString(s1) + ".*$").test(s2)},"!inc":function(s1,s2){return !new RegExp("^.*" + toRegExpString(s1) + ".*$").test(s2)},"invl":function(s1,s2){if(valueListComp(s1,s2) >= 0){return true;}return false;},"!invl":function(s1,s2){if(valueListComp(s1,s2) < 0){return true;}return false;}};var v1,v2,v3,v4,funcCmp1,funcCmp2,funcConv1,funcConv2;var oType = typeList[oSearchParam.oCurrCol.type] ? typeList[oSearchParam.oCurrCol.type] : typeList["string"];if(oSearchParam.selFirstValue){funcCmp1 = oFuncFactory[oSearchParam.selFirstValue];if(oType[oSearchParam.selFirstValue].conversion){funcConv1 = oType[oSearchParam.selFirstValue].conversion;}}if(oSearchParam.selSecondValue){funcCmp2 = oFuncFactory[oSearchParam.selSecondValue];if(oType[oSearchParam.selSecondValue].conversion){funcConv2 = oType[oSearchParam.selSecondValue].conversion;}}v1 = oSearchParam.inputFirst;v2 = oSearchParam.inputSecond;if(funcConv1) v1 = funcConv1(v1);if(funcConv2) v2 = funcConv2(v2);for(var i = 0; i < aSearchRows.length; i++){if(aSearchRows[i].getOption("state") == "row_add"){aRows.push(aSearchRows[i]);}else{v3 = aSearchRows[i].GetCellData(oSearchParam.oCurrCol.name);if(oSearchParam.oCurrCol.pfnGetText){var fn = eval(oSearchParam.oCurrCol.pfnGetText);v3 = fn(aSearchRows[i],v3);}v4 = v3;if(funcConv1){v3 = funcConv1(v3);}if(funcConv2){v4 = funcConv2(v4);}if(!oSearchParam.checkCase){if(v1 && Frame.Util.getType(v1) == "String") v1 = v1.toLowerCase();if(v2 && Frame.Util.getType(v2) == "String") v2 = v2.toLowerCase();if(v3 && Frame.Util.getType(v3) == "String") v3 = v3.toLowerCase();if(v4 && Frame.Util.getType(v4) == "String") v4 = v4.toLowerCase();}if(funcCmp1) var bResult1 = funcCmp1(v1,v3);if(funcCmp2) var bResult2 = funcCmp2(v2,v4);if(typeof bResult1 == "undefined"){bResult1 = true;}if(typeof bResult2 == "undefined"){if(bResult1) aRows.push(aSearchRows[i]);}else{if(oSearchParam.radioFirst && (bResult1 && bResult2)) aRows.push(aSearchRows[i]);if(oSearchParam.radioSecond && (bResult1 || bResult2)) aRows.push(aSearchRows[i]);}}}if(isSimpleRule(oSearchParam)){oComInput.value = oSearchParam.inputFirst;}else{oComInput.value = "";}oComSelect.value = oSearchParam.oCurrCol.name;oComSelect.onchange();oControlLayer.setPageRows (aRows);return aRows;    }function valueListToArray(valuelist){var destArr = [];if(valuelist){var srcArr = valuelist.split(",");var arrLength = srcArr.length;for(var i = 0; i < arrLength; i++){srcArr[i] = srcArr[i].trim();var item = {};var itemArr = srcArr[i].split("-");if(itemArr.length == 1){if(!isNaN(itemArr[0])){item.from = parseInt(itemArr[0],10);item.to = parseInt(itemArr[0],10);destArr.push(item);}}else if(itemArr.length == 2){if(!isNaN(itemArr[0]) && !isNaN(itemArr[1])){item.from = parseInt(itemArr[0],10);item.to = parseInt(itemArr[1],10);destArr.push(item);}}}}return destArr;}function valueListComp(v1,v2){var arr1 = valueListToArray(v1);var arr2 = valueListToArray(v2);var arrLen1 = arr1.length;var arrLen2 = arr2.length;var ret = 0;for(var i = 0; i < arrLen1; i++){var item1 = arr1[i];var result1 = 0;for(var j = 0; j < arrLen2; j++){var item2 = arr2[j];if(item2.to == item1.to && item2.from == item1.from){result1 = 0;break;}else if(item2.to < item1.to || item2.from > item1.from){result1 = -1;}else{result1 = 1;break;}}if(result1 == -1){return -1;}ret += result1;}return ret;}function toRegExpString(s){return s.replace(/(\\|\^|\$|\*|\+|\?|\{|\}|\(|\)|\.|\||\[|\])/g,"\\$1");}function onConData(){if(oSearchParam){oControlLayer.dataOperation("search", "", search);bEvent = false;}return top.EM.OK;}function onSave(oSaved){if(oSearchParam) oSaved.search = oSearchParam;return top.EM.OK;}function onResume(oSaved){if(oSaved.search) oSearchParam = oSaved.search;return top.EM.OK;}function onDisable(b){for(var i = 0; i < aDisabled.length; i++){aDisabled[i].disabled = b;if(b && aDisabled[i].onclick){aDisabled[i]._onclick = aDisabled[i].onclick;aDisabled[i].onclick = null;}if(!b && aDisabled[i]._onclick){aDisabled[i].onclick = aDisabled[i]._onclick;}}return top.EM.OK;}function onMakeHead(aCols){var selectedIndex = 0;for (var i = 0; i < aCols.length; i++){var oCol = aCols[i];if (typeof(oCol.query) != "undefined" && oCol.query != "false"){oSearchCols[oCol.name] = oCol;var opt = Frame.Util.createElement(window,"option",{text:oCol.text,value:oCol.name});oComSelect.options.add(opt);if(oCol.query == "default"){selectedIndex = oComSelect.options.length - 1;}}}oComSelect.selectedIndex = selectedIndex;oComSelect.onchange();return top.EM.OK;}function isSimpleRule(searchParam){var rule = {selFirstValue:function(value){return (value == (simpleTypeList[oSearchParam.oCurrCol.type] ? simpleTypeList[oSearchParam.oCurrCol.type] : simpleTypeList["string"]));},selSecondValue:function(value){return (value == "");},checkCase:function(value){return (value == false);},checkResult:function(value){return (value == false);}};var ret = true;for(var key in rule){if(searchParam[key] != null){ret = (ret && rule[key](searchParam[key]));}}return ret;}function searchAdv(){var selTitle = Frame.Widget.FWindow.createElement("select",null,{marginBottom:'5px'});selTitle.onchange = onColChanged;for(var key in oSearchCols){var opt = Frame.Widget.FWindow.createElement("option");opt.text = oSearchCols[key].text;opt.value = oSearchCols[key].name;selTitle.options.add(opt);}var divFirst = Frame.Widget.FWindow.createElement("div");var divRadio = Frame.Widget.FWindow.createElement("div");var divSecond = Frame.Widget.FWindow.createElement("div");var divCase = Frame.Widget.FWindow.createElement("div");var divResult = Frame.Widget.FWindow.createElement("div");var selFirst = Frame.Widget.FWindow.createElement("select",null,{width:'150px'});var inputFirst = Frame.Widget.FWindow.createElement("input",{size:20});inputFirst.style.marginLeft = "10px";var selSecond = Frame.Widget.FWindow.createElement("select",null,{width:'150px'});var inputSecond = Frame.Widget.FWindow.createElement("input",{size:20});inputSecond.style.marginLeft = "10px";var radioFirst = Frame.Widget.FWindow.createElement("input",{name:'andor',type:'radio',checked:'checked'});var radioSecond = Frame.Widget.FWindow.createElement("input",{name:'andor',type:'radio'});var checkCase = Frame.Widget.FWindow.createElement("input",{type:'checkbox'});var checkResult = Frame.Widget.FWindow.createElement("input",{type:'checkbox'});divCase.appendChild(checkCase);divCase.appendChild(Frame.Widget.FWindow.createTextNode(MList2.Rs.RS_QUERY_MATCHCASE));divResult.appendChild(checkResult);divResult.appendChild(Frame.Widget.FWindow.createTextNode(MList2.Rs.RS_QUERY_RESULT));var queryWin = Frame.Widget.FWindow.open(Frame.Widget.FWindow.CUSTOM_WINDOW,searchCb,{title:MList2.Rs.RS_QUERY_ADVANCE});var parentWin = queryWin.getInfoContent();divFirst.appendChild(selFirst);divFirst.appendChild(inputFirst);divRadio.appendChild(radioFirst);divRadio.appendChild(Frame.Widget.FWindow.createTextNode(MList2.Rs.RS_QUERY_AND));divRadio.appendChild(radioSecond);divRadio.appendChild(Frame.Widget.FWindow.createTextNode(MList2.Rs.RS_QUERY_OR));divSecond.appendChild(selSecond);divSecond.appendChild(inputSecond);parentWin.appendChild(selTitle);parentWin.appendChild(divFirst);parentWin.appendChild(divRadio);parentWin.appendChild(divSecond);parentWin.appendChild(divCase);parentWin.appendChild(divResult);selTitle.value = oCurrCol.name;onColChanged();queryWin.showWindow();if(oSearchParam){if(oSearchParam.selFirstValue != undefined) selFirst.value = oSearchParam.selFirstValue;if(oSearchParam.selSecondValue != undefined) selSecond.value = oSearchParam.selSecondValue;if(oSearchParam.inputFirst != undefined) inputFirst.value = oSearchParam.inputFirst;if(oSearchParam.inputSecond != undefined) inputSecond.value = oSearchParam.inputSecond;if(oSearchParam.radioFirst != undefined) radioFirst.checked = oSearchParam.radioFirst;if(oSearchParam.radioSecond != undefined) radioSecond.checked = oSearchParam.radioSecond;if(oSearchParam.checkCase != undefined) checkCase.checked = oSearchParam.checkCase;if(oSearchParam.checkResult != undefined) checkResult.checked = oSearchParam.checkResult;}function onColChanged(){oCurrCol = oSearchCols[selTitle.value];var oType = typeList[oCurrCol.type] ? typeList[oCurrCol.type] : typeList["string"];selFirst.length = 0;selSecond.length = 0;selFirst.options.add(Frame.Widget.FWindow.createElement("option"));selFirst.options[0].text = "";selFirst.options[0].value = "";selSecond.options.add(Frame.Widget.FWindow.createElement("option"));selSecond.options[0].text = "";selSecond.options[0].value = "";for(var i in oType){var opt = Frame.Widget.FWindow.createElement("option");opt.text = oType[i].text;opt.value = i;selFirst.options.add(opt);opt = Frame.Widget.FWindow.createElement("option");opt.text = oType[i].text;opt.value = i;selSecond.options.add(opt);}}function searchCb(){oSearchParam = {};oSearchParam.selFirstValue = selFirst.value;oSearchParam.selSecondValue = selSecond.value;oSearchParam.inputFirst = inputFirst.value;oSearchParam.inputSecond = inputSecond.value;oSearchParam.radioFirst = radioFirst.checked;oSearchParam.radioSecond = radioSecond.checked;oSearchParam.checkCase = checkCase.checked;oSearchParam.checkResult = checkResult.checked;oSearchParam.oCurrCol = oCurrCol;if(oSearchParam.selFirstValue == "" && oSearchParam.selSecondValue != ""){alert(MList2.Rs.RS_QUERY_NOTEMPTY);return false;}notifySearch();}}function createFace(){var oComSearch = Frame.Util.createElement(window,"span");var oComButton = Frame.Util.createElement(window,"input",{type:'button',className:'buttonX',value:MList2.Rs.SEARCH});oComInput = Frame.Util.createElement(window,"input",{type:'text',size:'20',empty:'true'},{paddingLeft:'10px'});var monitor = new Frame.Util.Monitor(function(){if(Frame.Util.contains(document.body,oComInput)){return true;}return false;},function(){oComInput.style.background = 'white url(../../images/search.png) no-repeat left center';},{win:window});monitor.start();oComSelect = Frame.Util.createElement(window,"select");oComSelect.onchange = onColChanged;Frame.Util.bindEvent(oComButton,"click",simpleSearch,oComInput);Frame.Util.bindEvent(oComInput,"keypress",function(oComInput,ev){if(ev.keyCode == 13){simpleSearch(oComInput);return false;}},oComInput);oComSearch.appendChild(oComInput);oComSearch.appendChild(oComSelect);oComSearch.appendChild(oComButton);oControlLayer.addToTOpration(oComSearch);oAdvSearch = Frame.Util.createElement(window,"span",null,{color:'blue',cursor:'pointer'},MList2.Rs.RS_QUERY_ADVANCE);oAdvSearch.onclick = searchAdv;oControlLayer.addToTOpration(oAdvSearch);aDisabled.push(oComInput);aDisabled.push(oComSelect);aDisabled.push(oComButton);aDisabled.push(oAdvSearch);function onColChanged(){oCurrCol = oSearchCols[this.value];}}  create();}MSearch.prototype = new top.MyObject();MSearch.prototype.NAME = "MSearch";function Group(oControlLayer, oGroupBy){if (oGroupBy.sGroupBy == ""){return;}var _aFoldGroup = {};var _aGroups = [];var _oGroups = {};var _bEvent = false;var _bDisabled = false;function create (){oControlLayer.regCallBack(MEventId.CONDATA, onConData, false, this);oControlLayer.regCallBack(MEventId.SHOW, onShow, false, this);oControlLayer.regCallBack(MEventId.SAVE, onSave, false, this);oControlLayer.regCallBack(MEventId.RESUME, onResume, false, this);oControlLayer.regCallBack(MEventId.DISABLE, onDisable, false, this);}function onConData(){oControlLayer.dataOperation("group", "", group);_bEvent = false;return top.EM.OK;}function onShow(){var aRows = oControlLayer.getCurPageRows();var aShowPage = [];var sLastGroup = "";for(var i = 0; i < aRows.length; i++){var oGroupBy = aRows[i].getOption("groupby");if (sLastGroup != oGroupBy.group){aShowPage.push(tagRow(oGroupBy.group,aRows[i]));sLastGroup = oGroupBy.group;}if (typeof(_aFoldGroup[oGroupBy.group]) == "undefined"){aShowPage.push(aRows[i]);}}oControlLayer.setPageRows(aShowPage);return top.EM.OK;}function onSave (oSaved){oSaved.groupby = _aFoldGroup;return top.EM.OK;}function onResume (oSaved){_aFoldGroup = oSaved.groupby;return top.EM.OK;}function onDisable (b){_bDisabled = b;return top.EM.OK;}function group(paAllRows, paCurRows, pbChange){if (pbChange == false && _bEvent == false){return top.EM.SKIP;}_aGroups = [];_oGroups = {};for (var i = 0; i < paCurRows.length; i++){var sKey = paCurRows[i].GetCellText(oGroupBy.sGroupBy);paCurRows[i].addOption("show", true);if (typeof(_oGroups[sKey]) == "undefined"){_oGroups[sKey] = _aGroups.length;_aGroups[_aGroups.length] = sKey;paCurRows[i].addOption("groupby", {begin:true, group:sKey});}else{paCurRows[i].addOption("groupby", {begin:false, group:sKey});if (typeof(_aFoldGroup[sKey]) != "undefined"){paCurRows[i].addOption("show", false);}}}return top.EM.OK;}function tagRow(psName,pdataRow){var oTagRow = new RowObject();oTagRow.addOption("name", psName);        oTagRow.addOption("cbuild", makeGrow);oTagRow.addOption("dataRow", pdataRow);return oTagRow;}function makeGrow(oRow){var options = {};var key = oRow.getOption("name");var dataRow = oRow.getOption("dataRow");var bFold = (typeof(_aFoldGroup[key]) == "undefined")?false:true;var oTr,oTd,divTitle,divButton,imgSpan;this.bSpan = false;oTr = Frame.Util.createElement(window,"tr");divTitle = Frame.Util.createElement(window,"td",null,{border:0});divButton = Frame.Util.createElement(window,"td",{colSpan:oControlLayer.getColCount()-1},{textAlign:'right'});imgSpan = Frame.Util.createImage(window,{src:(bFold) ? '../../images/query_close.gif' : '../../images/query_open.gif'});if(oGroupBy.pfGroupBy){var btn = oGroupBy.pfGroupBy(key,dataRow);var monitor = new Frame.Util.Monitor(function(){if(Frame.Util.contains(document.body,divButton)){return true;}return false;},function(){divButton.innerHTML = (btn);},{win:window});monitor.start();}Frame.Util.bindEvent(imgSpan,"click",GroupSpan,key);divTitle.appendChild(imgSpan);divTitle.appendChild(document.createTextNode(key));oTr.appendChild(divTitle);oTr.appendChild(divButton);return oTr;}function GroupSpan(sKey){if (_bDisabled == false){var oUndef;if (typeof(_aFoldGroup[sKey]) != "undefined"){_aFoldGroup[sKey] = oUndef;}else{_aFoldGroup[sKey] = sKey;;}_bEvent = true;oControlLayer.reDraw();}return;}create ();}Group.prototype = new top.MyObject();Group.prototype.NAME = "Group";function CreatePage(oControlLayer,oPage){var aShowObects = [];var aShowRows = [];var nPerPageLine = 15;var nCurPage = 0;var nSavedCurPage = 0;var bInitSavedCurPage = false;var oForSave = {};var oSelf = this;var oCase;function create(){if(top.Frame.Util.cookie.isSupport()){var globalPagesize = top.Frame.Util.cookie.read("mlist2_pagesize");var pagesize = top.Frame.Util.cookie.read("mlist2_pagesize_list");if(globalPagesize != "") nPerPageLine = parseInt(globalPagesize);if(pagesize != ""){var pageSizeList = top.Frame.Util.JSON.getObject(pagesize);if(pageSizeList != null){if(pageSizeList[TABID + "_" + oPage.mlistId] != null){nPerPageLine = parseInt(pageSizeList[TABID + "_" + oPage.mlistId]);}}}}createFace();oControlLayer.regCallBack(MEventId.CONDATA, onConData, false, oSelf);oControlLayer.regCallBack(MEventId.DATA_ADD, onShow, false, oSelf);oControlLayer.regCallBack(MEventId.SHOW, onShow, false, oSelf);oControlLayer.regCallBack(MEventId.DISABLE, onDisable, false, oSelf);oControlLayer.regCallBack(MEventId.SAVE, onSave, false, oSelf);oControlLayer.regCallBack(MEventId.RESUME, onResume, false, oSelf);oControlLayer.regCallBack(MEventId.SEARCH, function(){nCurPage = 1;return top.EM.OK;}, false, oSelf);oControlLayer.regCallBack(MEventId.SORT, function(){nCurPage = 1;return top.EM.OK;}, false, oSelf);oControlLayer.regCallBack(MEventId.NEWROW, function(){nCurPage = 0xffffffff;return top.EM.OK;}, false, oSelf);oControlLayer.regCallBack(MEventId.DATA_READY, function(bDataReady){bInitSavedCurPage=bDataReady;}, false, oSelf);oControlLayer.regUserInterface("GetPageCount", getPageCount);oControlLayer.regUserInterface("GetPageSize", getPageSize);oControlLayer.regUserInterface("GetPageRows", getPageRows);    oControlLayer.regUserInterface("GetCurrentPage", getCurrentPage);    oControlLayer.regUserInterface("ShowPage", showPage);    oControlLayer.regUserInterface("GetAllRows", getPageRows); }function onConData(){oControlLayer.dataOperation("page", "", showPageRows);return top.EM.OK;}function onShow (){var oRange = oControlLayer.getPageRange();var nTotalLine = oControlLayer.getCurCount();var nTotalPage = parseInt((aShowRows.length+nPerPageLine-1)/nPerPageLine);aShowObects.TotalItem.innerHTML = top.sprintf(MList2.Rs.RS_PAGE_TOTAL,nTotalLine);aShowObects.PerPageItem.value = nPerPageLine;aShowObects.CurPageInfo.innerHTML = top.sprintf(MList2.Rs.RS_PAGE_SIZE, nCurPage, nTotalPage, oRange.from, oRange.end);aShowObects.NPage.value = nCurPage;if (nTotalLine > 5){oCase.style.visibility="visible";}else{oCase.style.visibility="hidden";}if(nCurPage == 1){aShowObects.goToFirstPage.disabled = true;aShowObects.goToPrePage.disabled = true;updateLinkStyle(aShowObects.goToFirstPage);updateLinkStyle(aShowObects.goToPrePage); }else{aShowObects.goToFirstPage.disabled = false;aShowObects.goToPrePage.disabled = false;updateLinkStyle(aShowObects.goToFirstPage);updateLinkStyle(aShowObects.goToPrePage); }if(nCurPage == nTotalPage){aShowObects.goToNextPage.disabled = true;aShowObects.goToLastPage.disabled = true;updateLinkStyle(aShowObects.goToNextPage);updateLinkStyle(aShowObects.goToLastPage); }else{aShowObects.goToNextPage.disabled = false;aShowObects.goToLastPage.disabled = false;updateLinkStyle(aShowObects.goToNextPage);updateLinkStyle(aShowObects.goToLastPage); }return top.EM.OK;}function onDisable(b){for(var key in aShowObects){aShowObects[key].disabled = b;}return top.EM.OK;}function onSave(oSaved){oForSave.nPageSize = aShowObects.PerPageItem.value;oForSave.nCurrPage = nCurPage;oSaved.page = oForSave;return top.EM.OK;}function onResume(oSaved){if(oSaved.page){nPerPageLine = parseInt(oSaved.page.nPageSize);nSavedCurPage = parseInt(oSaved.page.nCurrPage);}return top.EM.OK;}function showPageRows(paAllRows, paRows, pbChange){var nFrom = 0;var nEnd = 0;aShowRows = [];for (var i = 0; i < paRows.length; i++){paRows[i].addOption("number",i);if(paRows[i].getOption("show") != false){aShowRows.push(paRows[i]);}}var nTotalLine = paRows.length;var nTotalPage = parseInt((aShowRows.length+nPerPageLine-1)/nPerPageLine);if(nSavedCurPage > 0){nCurPage = nSavedCurPage;bInitSavedCurPage&&(nSavedCurPage=0);}nCurPage = (nCurPage > nTotalPage || nTotalPage == 0) ? nTotalPage : nCurPage;nCurPage = (nCurPage <= 0 && nTotalPage != 0) ? 1 : nCurPage;if(nCurPage == nSavedCurPage)nSavedCurPage = 0;if (nCurPage == 0){nFrom = nEnd = 0;}else{nFrom = (nCurPage-1)*nPerPageLine;nEnd = ((nCurPage*nPerPageLine -1) > (aShowRows.length-1)) ? (aShowRows.length-1) : (nCurPage*nPerPageLine -1);}oControlLayer.setPageRows (aShowRows.slice(nFrom, nEnd+1));nEnd = (aShowRows[nEnd+1])?aShowRows[nEnd+1].getOption("number"):nTotalLine;oControlLayer.setPageRange(nFrom+1, nEnd);return top.EM.OK;}function createFace(){oCase = Frame.Util.createElement(window,"div");var aPerPageItems = [{text: "5", value: "5"},{text: "10", value: "10"},{text: "15", value: "15"},{text: "20", value: "20"},{text: "30", value: "30"},{text: "50", value: "50"},{text: "100", value: "100"}];oCase.align = "right";aShowObects.TotalItem = Frame.Util.createElement(window,"span");aShowObects.PerPageItem = Frame.Util.createElement(window,"select");aShowObects.CurPageInfo = Frame.Util.createElement(window,"span");aShowObects.goToFirstPage = Frame.Util.createElement(window,"input",{type:'button',value:MList2.Rs.RS_PAGE_FIRST,className:'mlist_page_link'});aShowObects.goToPrePage = Frame.Util.createElement(window,"input",{type:'button',value:MList2.Rs.RS_PAGE_PREV,className:'mlist_page_link'});aShowObects.goToNextPage = Frame.Util.createElement(window,"input",{type:'button',value:MList2.Rs.RS_PAGE_NEXT,className:'mlist_page_link'});aShowObects.goToLastPage = Frame.Util.createElement(window,"input",{type:'button',value:MList2.Rs.RS_PAGE_END,className:'mlist_page_link'});aShowObects.NPage = Frame.Util.createElement(window,"input",{type:"text",size:"5",maxLength:"5",empty:'true'});aShowObects.goToNPage = Frame.Util.createElement(window,"input",{type:'button',className:"buttonX",value:MList2.Rs.RS_PAGE_GO});aShowObects.goToFirstPage.onclick = goToFirstPage;aShowObects.goToPrePage.onclick = goToPrePage;aShowObects.goToNextPage.onclick = goToNextPage;aShowObects.goToLastPage.onclick = goToLastPage;aShowObects.goToNPage.onclick = goToNPage;Frame.Util.bindEvent(aShowObects.NPage,"keypress",function(ev){if(ev.keyCode == 13){goToNPage();return false;}});aShowObects.PerPageItem.length = aPerPageItems.length;aShowObects.PerPageItem.onchange = onPerPageChage;for(var i = 0; i < aPerPageItems.length; i++){aShowObects.PerPageItem.options[i].text = aPerPageItems[i].text;aShowObects.PerPageItem.options[i].value = aPerPageItems[i].value;}for (var i in aShowObects){oCase.appendChild(aShowObects[i]);}oControlLayer.addToTFoot(oCase);return;}function onPerPageChage (){nPerPageLine = parseInt(aShowObects.PerPageItem.value);if(top.Frame.Util.cookie.isSupport()){if(confirm(MList2.Rs.RS_PAGE_CHANGESIZE)){top.Frame.Util.cookie.write("mlist2_pagesize",nPerPageLine,{path:"/",y:1});top.Frame.Util.cookie.remove("mlist2_pagesize_list",{path:"/"});}else {var pageSizeList = top.Frame.Util.cookie.read("mlist2_pagesize_list");if(pageSizeList == ""){pageSizeList = {};}else{pageSizeList = top.Frame.Util.JSON.getObject(pageSizeList);}pageSizeList[TABID + "_" + oPage.mlistId] = nPerPageLine;top.Frame.Util.cookie.write("mlist2_pagesize_list",top.Frame.Util.JSON.serialize(pageSizeList),{path:"/",y:1});}}oControlLayer.reDraw();}function updateLinkStyle(oLink){if(oLink.disabled){oLink.className = "page_link_disable";return false;}oLink.className="mlist_page_link";return true;}function goToFirstPage (){if (nCurPage != 1)gotoPage(1);}function goToPrePage (){if(nCurPage > 1)gotoPage(nCurPage-1);}function goToNextPage (){var nTotalPage = parseInt((aShowRows.length+nPerPageLine-1)/nPerPageLine);if (nCurPage < nTotalPage)gotoPage(nCurPage+1);}function goToLastPage (){var nTotalPage = parseInt((aShowRows.length+nPerPageLine-1)/nPerPageLine);if (nCurPage != nTotalPage)gotoPage(0xffffffff);}function goToNPage(){var n=parseInt(aShowObects.NPage.value,10);if (n && n != nCurPage)gotoPage(n);}function gotoPage(n){nCurPage = n;oControlLayer.reDraw();}function getPageRows(nPage){if (!nPage || nPage < 1){nPage = nCurPage;}var nfrom = (nPage-1)*nPerPageLine;var aRows = oControlLayer.getCurRows(nfrom, nPerPageLine);return aRows;}function getPageCount(nPage){var aRows = getPageRows(nPage);return aRows.length;}function getCurrentPage(){return nCurPage;}function getPageSize(){return nPerPageLine;}function showPage(nPage){if (!nPage)nPage =nCurPage;if (nPage != nCurPage){gotoPage(nPage);return true;}return false;}create();}CreatePage.prototype = new top.MyObject();CreatePage.prototype.NAME = "CreatePage";function GetNext(oControlLayer,oGetNext){var buffer = [];var oSelf = this;var timer = null;var img = null;var imgDiv = null;var MLIST_MAX_ROW = 20000;function create(){oControlLayer.regUserInterface("AppendDatas", appendDatas);  oControlLayer.regCallBack(MEventId.SHOW, onShow, false, oSelf);}function onShow(){if("" != oGetNext.pfGetNext && timer == null){img = Frame.Util.createElement(window,"img",{src:'../../images/loading.gif'});oControlLayer.addToTOpration(img);var nMinLimit  = (null == oGetNext.nLimit) ? PER_GET_COUNT : oGetNext.nLimit;if(oControlLayer.getCount() >= nMinLimit){_GetNext();}else{endLoading();}}}function _GetNext(){oControlLayer.notify(MEventId.DATA_READY, false);timer = setTimeout(_GetNextEntry, 100);return;}function _GetNextEntry(){var oFunction = eval(oGetNext.pfGetNext);if (false === oFunction(oControlLayer.getMlist())){endLoading();}return true;}function endLoading(){oControlLayer.notify(MEventId.DATA_READY, true);oControlLayer.removeFromTOpration(img);oControlLayer.reDraw();}function appendDatas(arrData, bEndFlag){var nCount = arrData.length;var bEnd = (null == bEndFlag) ? (PER_GET_COUNT != nCount) : bEndFlag;  var oInfo = this.oMlistInfo;buffer = buffer.concat(arrData);var nOldLen = oControlLayer.getCount();var nBufLen = buffer.length;if(nOldLen + nBufLen >= MLIST_MAX_ROW){bEnd = true;}var bAutoRedraw = oControlLayer.getAutoRedraw;oControlLayer.appendDatas(buffer,true);oControlLayer.setAutoRedraw(bAutoRedraw);buffer = [];if(false == bEnd){_GetNext(this);}else{endLoading();}return true;}create();}var oCtrlAttributes = {a:{text:null,action:{href:"javascript:function(){};",onclick:function(sAction){return new Function("top.doAction(window,'" + sAction + "')")}},tip:{title:function(sTip){return sTip}}},img:{text:null,action:{onclick:function(sAction){return new Function("top.doAction(window,'" + sAction + "')")}},tip:{alt:function(sTip){return sTip}}},select:{text:null,action:{onchange:function(sAction){return new Function("top.doAction(window,'" + sAction + "')")}}},input:{text:null,tip:{title:function(sTip){return sTip}}},text:{text:null},checkbox:{text:null,tip:{title:function(sTip){return sTip}}},radio:{text:null,tip:{title:function(sTip){return sTip}}},datetime:{text:null}};function copyAttributes(type,oDes,oSrc){for(var key in oSrc){var oReplace = oCtrlAttributes[type][key];if(oReplace instanceof Object){for(var iKey in oReplace){if(oReplace[iKey] instanceof Function) oDes[iKey] = oReplace[iKey].apply(null,[oSrc[key]]);else oDes[iKey] = oReplace[iKey];}}else if(oReplace === null){continue;}else{oDes[key] = oSrc[key];}}}function textConstruct(oParams){var sColName = oParams.name;return function(oRow){var oAttributes = {};copyAttributes(oParams.ctype,oAttributes,oParams.ctrl.attributes);var sText = oRow.GetCellData(sColName);sText = top.HTMLEncode(sText);return sText;};}function aConstruct(oParams){var sColName = oParams.name;return function(oRow){var oAttributes = {};copyAttributes(oParams.ctype,oAttributes,oParams.ctrl.attributes);var sText = oRow.GetCellData(sColName);var oSpan = Frame.Util.createElement(window,"span");var a = Frame.Util.createElement(window,oParams.ctrl.tagName,oAttributes,null,sText);oSpan.appendChild(a);return oSpan;};}function imageConstruct(oParams){var sColName = oParams.name;return function(oRow){var oAttributes = {};var sText = oRow.GetCellData(sColName);var oSpan = Frame.Util.createElement(window,"span");var oImg = oParams.ctrl.list[sText];if(oImg) copyAttributes(oParams.ctype,oAttributes,oImg);var img = Frame.Util.createElement(window,oParams.ctrl.tagName,oAttributes);oSpan.appendChild(img);return oSpan;};}function inputConstruct(oParams){var sColName = oParams.name;return function(oRow){var oAttributes = {};copyAttributes(oParams.ctype,oAttributes,oParams.ctrl.attributes);var sText = oRow.GetCellData(sColName);if(!oRow.getOption("state")){if(oParams.origin == "true"){sText = top.HTMLEncode(sText);}return sText;}oAttributes.value = sText;var oSpan = Frame.Util.createElement(window,"span");var input = Frame.Util.createElement(window,oParams.ctrl.tagName,oAttributes);Frame.Util.bindEvent(input,"onfocus",function(){if(oAttributes.min && oAttributes.max){var posX = Frame.Util.getOffsetLeft(input) + input.offsetWidth;if(input.offsetWidth == 0);var posY = Frame.Util.getOffsetTop(input);Frame.Util.Tip.setPosition(posX,posY);Frame.Util.Tip.show(input,"(" + oAttributes.min + " - " + oAttributes.max + ")");}});Frame.Util.bindEvent(input,"onblur",Frame.Util.Tip.hide);oSpan.appendChild(input);return oSpan;};}function selectConstruct(oParams){var sColName = oParams.name;return function(oRow){var oAttributes = {};copyAttributes(oParams.ctype,oAttributes,oParams.ctrl.attributes);var sText = oRow.GetCellData(sColName);if(!oRow.getOption("state")){if(oParams.origin == "true"){sText = top.HTMLEncode(sText);}return sText;}var oSpan = Frame.Util.createElement(window,"span");var select = Frame.Util.createElement(window,oParams.ctrl.tagName,oAttributes);select.length = oParams.ctrl.options.length;sText = top.HTMLDecode(sText);for(var i = 0; i < oParams.ctrl.options.length; i++){select.options[i].text = oParams.ctrl.options[i].text;select.options[i].value = oParams.ctrl.options[i].value;if(oParams.ctrl.options[i].text == sText){select.options[i].selected = true;}}oSpan.appendChild(select);return oSpan;};}function checkboxConstruct(oParams){var sColName = oParams.name;return function(oRow){var oAttributes = {};copyAttributes(oParams.ctype,oAttributes,oParams.ctrl.attributes);var sText = oRow.GetCellData(sColName);if(!oRow.getOption("state")) return sText;var oSpan = Frame.Util.createElement(window,"span");var input = Frame.Util.createElement(window,oParams.ctrl.tagName,oAttributes);oSpan.appendChild(input);return oSpan;};}function radioConstruct(oParams){var sColName = oParams.name;return function(oRow){var oAttributes = {};copyAttributes(oParams.ctype,oAttributes,oParams.ctrl.attributes);var sText = oRow.GetCellData(sColName);if(!oRow.getOption("state")) return sText;var oSpan = Frame.Util.createElement(window,"span");var input = Frame.Util.createElement(window,oParams.ctrl.tagName,oAttributes);oSpan.appendChild(input);return oSpan;};}function dateConstruct(oParams){var sColName = oParams.name;return function(oRow){var oAttributes = {};copyAttributes(oParams.ctype,oAttributes,oParams.ctrl.attributes);var sText = oRow.GetCellData(sColName);if(!oRow.getOption("state")) return sText;var oSpan = Frame.Util.createElement(window,"span");var input = Frame.Util.createElement(window,oParams.ctrl.tagName,oAttributes);input.onclick = function(){try{WdatePicker(new oParams.ctrl.oDate())}catch(e){}};oSpan.appendChild(input);return oSpan;};}function progressConstruct(oParams){var sColName = oParams.name;return function(oRow){var sText = oRow.GetCellData(sColName);var oDivMain = Frame.Util.createElement(window,"div");var oDivGraph = Frame.Util.createElement(window,"div",{className:'usage'},{width:'200px',textAlign:'right',float:'left'});var img = Frame.Util.createElement(window,"img",{src:'../../images/graph_off.gif'});oDivMain.appendChild(oDivGraph);oDivGraph.appendChild(img);return oDivMain;};}function customConstruct(oParams){return  oParams.ctrl.buildfunc;}var CRowObject = RowObject;function RowObject (){this.value = null;this.attributes = [];this.data = []; this.index = 0;this._options = [];this._clone = function(oRow){this.value = oRow.value;this.attributes = oRow.attributes;this.data = oRow.data;this.index = oRow.index;this._options = oRow._options;};}RowObject.prototype.NAME = "RowObject";RowObject.prototype = new top.MyObject();RowObject.prototype._toColName = function (iCol){var sCol = iCol;if(typeof(iCol) == "number"){sCol = this.getOption("root").getColNameByIndex(iCol, "data");}return sCol;}RowObject.prototype._toColIndex = function (iCol){var nCol = iCol;if(iCol.constructor == String){nCol = this.getOption("root").getColIndexByName(iCol, "data");}return nCol;}RowObject.prototype.GetCellText = function (iCol){return this.GetCellData(iCol).replace(/<.+?>/g, "").toInnerText();}RowObject.prototype.GetCellData = function (iCol){var sCol = this._toColName(iCol);if(this.data[sCol] == undefined){this.data[sCol] = "";var oNode = this.getOption("root").getXmlData();if(oNode){oNode = oNode[sCol];if(oNode.snapshotItem){oNode = oNode.snapshotItem(this.index).firstChild;}else{oNode = oNode[this.index].firstChild;}if(oNode){this.data[sCol] = oNode.nodeValue;}}}return this.data[sCol];}RowObject.prototype.SetCellText = function (iCol, sText){var sCol = this._toColName(iCol);var oRow = this.getOption("paintRow");this.data[sCol] = sText + "";if (oRow){this.getOption("root").rowRedraw(this);}}RowObject.prototype.GetValue = function (){var sValue = this.value;if (sValue ==""){for (var att in this.data){sValue = this.GetCellText(att);break;}}return sValue;}RowObject.prototype.SetValue = function (sValue){this.value = sValue;}RowObject.prototype.GetAttribute = function (sName){return this.attributes[sName];}RowObject.prototype.AddAttribute = function (sName, sValue){this.attributes[sName] = sValue;}RowObject.prototype.addOption = function (sName, sValue){this._options[sName] = sValue;}RowObject.prototype.getOption = function (sName){return this._options[sName];}RowObject.prototype.IsSelected = function (){return true===this.getOption("selected");}RowObject.prototype.GetCellObject = function (sName){var nCol = this._toColIndex(sName);var oRow = this.getOption("paintRow");var oCell = null;if (nCol && oRow){oCell = oRow.cells[nCol-1+this.getOption("root").getColCount("head")];}return oCell;}RowObject.prototype.GetEditValue = function (){var values = this.getOption("editValue");return values;}RowObject.prototype.FinishEdit = function (){this.addOption("state",null);this.getOption("root").notify(MEventId.DISABLE, false);}RowObject.prototype.create = function (oControler){var _bDisable = false;var _oHtml = this.getOption("paintRow");Util.ASSERT(null!=this._oControler, "ROW create: controler is NULL");oControler.regCallBack(MEventId.REDRAW, function(bForce){if(bForce && _oHtml){return top.EM.OK;    }return top.EM.SKIP;}, false);oControler.regCallBack(MEventId.DISABLE, function(bDisable){_bDisable = bDisable;return top.EM.OK;}, false);oControler.regCallBack(MEventId.UPDATE, function(bSave){if(true === bSavel){return top.EM.SKIP;    }else{return top.EM.OK;}}, false);}function makeMlist2XmlData(arrColHeader,oXmlDoc,sXPath,oTagName){var arrMlistRows = [];if(oXmlDoc){var aRows = oXmlDoc.selectNodes(sXPath + "/child::*");var oNodes = {};for(var j = 0; j < arrColHeader.length; j++){var oCol = arrColHeader[j];oNodes[oCol.name] = oXmlDoc.selectNodes(oTagName[oCol.name]);}var nMax = aRows.length;for(var i = 0; i < nMax; i++){var oRow = new RowObject(),oCol,oNode;oRow.addOption("selected", false);oRow.index = i;arrMlistRows.push(oRow);}arrMlistRows.data = oNodes;}return arrMlistRows;}function initDom(win){var internal_getElementsByTagName = win.XMLDocument.prototype.getElementsByTagName;if(win.document.implementation && win.document.implementation.createDocument){if( win.document.implementation.hasFeature("XPath", "3.0") ){win.XMLDocument.prototype.selectNodes = function(cXPathString, xNode){if( !xNode ) { xNode = this; }var aItems = this.evaluate(cXPathString, xNode, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);aItems.length = aItems.snapshotLength;return aItems;}win.XMLDocument.prototype.getElementsByTagName = function(sTagName){              aResult = internal_getElementsByTagName.call(this,sTagName);for( var i = 0; i < aResult.length; i++){if(aResult[i].firstChild != null){aResult[i].text = aResult[i].firstChild.nodeValue;}}return aResult;}win.Element.prototype.selectNodes = function(cXPathString){if(this.ownerDocument.selectNodes){return this.ownerDocument.selectNodes(cXPathString, this);}else{throw "For XML Elements Only";}}}if( win.document.implementation.hasFeature("XPath", "3.0") ){win.XMLDocument.prototype.selectSingleNode = function(cXPathString, xNode){if( !xNode ) { xNode = this; } var xItems = this.selectNodes(cXPathString, xNode);if( xItems.length > 0 ){return xItems[0];}else{return null;}}win.Element.prototype.selectSingleNode = function(cXPathString){    if(this.ownerDocument.selectSingleNode){return this.ownerDocument.selectSingleNode(cXPathString, this);}else{throw "For XML Elements Only";}}}}if(win.document.defaultView){win.document.parentWindow = win.document.defaultView;}} function GetInnerText(sHtmlText){return sHtmlText.replace(/<.+?>/g, "").toInnerText();}