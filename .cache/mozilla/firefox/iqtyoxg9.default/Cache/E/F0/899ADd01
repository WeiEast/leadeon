(function( window, undefined ){var oWinBorn = window,_cos = window.cos,cos = (function(){var COS = function(win, cosname){var wincos;win = win||oWinBorn;cosname = cosname||'cos';if(cosname in win){wincos = win[cosname];}else{wincos = function(win){return COS(win)};cos.cover(wincos, cos, { win : function(){return win} });}return wincos;},cos = function(win){return COS(win)},temp = cos.win = function(){return oWinBorn},temp = cos.isArray = function(v){return Object.prototype.toString.apply(v) === '[object Array]';},temp = cos.each = function(oTravel, fnCallBack, oScope) {var i, bResult = true;if( cos.isArray(oTravel) ){for(i = 0; i<oTravel.length; i++){if(false === fnCallBack.call(oScope||oTravel[i], i, oTravel[i], oTravel)){bResult = false;break;}}}else{for(i in oTravel){if(false === fnCallBack.call(oScope||oTravel[i], i, oTravel[i], oTravel)){bResult = false;break;}}}return bResult;},temp = cos.isIE = (function(){var sUserAgent = cos.win().navigator.userAgent.toLowerCase(),is = function(rCharacter){return rCharacter.test(sUserAgent);};return !is(/opera/)&&is(/msie/);})(),temp = cos.toArray = (function(){return cos.isIE ?function(a, i, j){var aResult = [], n;for(n = 0; n < a.length; n++){aResult.push(a[n]);}return aResult.slice(i||0, j||n);} :function(a, i, j){return Array.prototype.slice.call(a, i||0, j||a.length);}})();temp = cos.cover = function(oTarget){ cos.each(cos.toArray(arguments).slice(1), function(i, v){cos.each(v, function(i, v){oTarget[i] = v;});cos.isIE && cos.each(['toString'], function(i, p){v.hasOwnProperty(p) && (oTarget[p] = v[p])});});return oTarget;},oCosInfo = {name : 'cos',version : '1.0',toString : function(){var win = this.win(),isTop = (win.top == win),sWinName = (isTop?'top':win.name)||'Unkown',aCosInfo = [];aCosInfo.push('name    : ' + this.name);aCosInfo.push('version : ' + this.version);aCosInfo.push('window  : ' + sWinName);return aCosInfo.join('\r\n');}},oCosNs = { kernel:{}, util:{},data:{}, grid:{}, tree:{}, lib:{} },temp = cos.cover(cos, oCosInfo, oCosNs, {noConflict : function(){window.cos=_cos;return cos;}});return cos;})();window.cos = cos;})(window);(function(cos){var oBaseTypeJudge = (function(){ var toString = Object.prototype.toString;return {isDefined   : function(v){return typeof v !== 'undefined';},isObject    : function(v){return !!v && toString.call(v) === '[object Object]';},isArray     : function(v){return toString.apply(v) === '[object Array]';},isFunction  : function(v){return toString.apply(v) === '[object Function]';},isDate      : function(v){return toString.apply(v) === '[object Date]';},isNumber    : function(v){return typeof v === 'number' && isFinite(v);},isString    : function(v){return typeof v === 'string';},isBoolean   : function(v){return typeof v === 'boolean';},isPrimitive : function(v){return this.isString(v) || this.isNumber(v) || this.isBoolean(v);}};})(),oUaJudge = (function(){ var oUaJudge = {},sUserAgent = navigator.userAgent.toLowerCase(),is = function(rCharacter){return rCharacter.test(sUserAgent);},windoc = window.document,isStrict = windoc.compatMode == "CSS1Compat",isOpera = is(/opera/),isChrome = is(/\bchrome\b/),isWebKit = is(/webkit/),isSafari = !isChrome && is(/safari/),isSafari2 = isSafari && is(/applewebkit\/4/), // unique to Safari 2isSafari3 = isSafari && is(/version\/3/),isSafari4 = isSafari && is(/version\/4/),isIE = !isOpera && is(/msie/),isIE7 = isIE && is(/msie 7/),isIE8 = isIE && is(/msie 8/),isIE6 = isIE && !isIE7 && !isIE8,isGecko = !isWebKit && is(/gecko/),isGecko2 = isGecko && is(/rv:1\.8/),isGecko3 = isGecko && is(/rv:1\.9/),isBorderBox = isIE && !isStrict,isWindows = is(/windows|win32/),isLinux = is(/linux/),isMac = is(/macintosh|mac os x/),isAir = is(/adobeair/),isSecure = /^https/i.test(window.location.protocol),aItems = ['isOpera',   'isWebKit',    'isChrome', 'isGecko',   'isGecko2',    'isGecko3', 'isSafari',  'isSafari2',   'isSafari3', 'isSafari4', 'isIE',      'isIE6',       'isIE7',     'isIE8','isWindows', 'isLinux',     'isMac',     'isAir','isStrict',  'isBorderBox', 'isSecure'];cos.each(aItems, function(i, v){oUaJudge[v] = eval(v);});if(isIE6){try{windoc.execCommand("BackgroundImageCache", false, true);}catch(e){};}return oUaJudge;})(),temp = cos.cover(cos, oBaseTypeJudge, oUaJudge);})(cos);(function(cos){var aLogs = [],Log = function(sMessage, sType, sSource){this.time = cos.now();this.type = sType; this.source = sSource; this.message = sMessage;},temp = Log.prototype.toString = function(){return '@' + this.time + '-' + this.type + '-by-' + this.source + ' : ' + this.message;}temp = cos.cover(cos, {logs  : function(){return aLogs.slice(0);},log   : function(sMessage, sType, sSource){return aLogs[aLogs.push(new Log(sMessage||"Empty message.", sType||"info", sSource||"global"))-1];},error : function(sMessage, sSource){return cos.log(sMessage, 'error', sSource);},warn  : function(sMessage, sSource){return cos.log(sMessage, 'warn', sSource)},note  : function(sMessage, sSource){return cos.log(sMessage, 'note', sSource)},info  : function(sMessage, sSource){return cos.log(sMessage, 'info', sSource)}});})(cos);(function(cos){var oUtility = { id : (function(){var nIdStart = 0;return function(){return ('cos-id') + (++nIdStart);};})(),now : function(){return (new Date()).getTime();},noop :function(){},toArray : (function(){return cos.isIE ?function(a, i, j){var aResult = [], n;for(n = 0; n < a.length; n++){aResult.push(a[n]);}return aResult.slice(i||0, j||n);} :function(a, i, j){return Array.prototype.slice.call(a, i||0, j||a.length);}})(),coverown : function(oTarget ){cos.each(cos.toArray(arguments).slice(1), function(i, v){cos.each(v, function(i, v){cos.isDefined(oTarget[i])&&(oTarget[i] = v);});cos.isIE && oTarget.hasOwnProperty('toString') && v.hasOwnProperty('toString') && (oTarget.toString = v.toString);});return oTarget;},coverwith : function(oWith, oTarget ){var oMyWith = cos.cover({}, oWith),oMySource = cos.coverown(oMyWith, cos.toArray(arguments).slice(2));return cos.coverown(oTarget, oMySource);},copy : function(oSource) { var oFnCopy = {'number' : function(v){return v},'string' : function(v){return v},'boolean' : function(v){return v},'object' : function(v){return v}},sType = typeof oSource;return oTarget;},fill : function(oTarget){cos.each(cos.toArray(arguments).slice(1), function(i, v){cos.each(v, function(i, v){!cos.isDefined(oTarget[i])&&(oTarget[i] = v);});cos.isIE && !oTarget.hasOwnProperty('toString') && v.hasOwnProperty('toString') && (oTarget.toString = v.toString);});return oTarget;},map : function(oTravel, fnMap){ var result;if(cos.isArray(oTravel)) {result = [];for(i = 0; i<oTravel.length; i++) {result.push(fnMap.call(oTravel[i], i, oTravel[i], oTravel));}}else {result = {};for(i in oTravel) {result[i] = fnMap.call(oTravel[i], i, oTravel[i], oTravel);}}return result;},Map : (function(){ var Map = function(){this.index = {};};cos.cover(Map.prototype, {find : function(value){var sId= '';cos.each(this.index, function(i, v){var bContinue = true;if(v === value){sId = i;bContinue = false;}return bContinue;});return sId;},add : function(value){var sId = this.find(value) || cos.id();this.index[sId] = value;return sId;},get : function(sId){return this.index[sId];},toIndex : function(aValues){ var oThis = this;return cos.map(aValues, function(i, v){return oThis.add(v)});},toData : function(aIds){var oThis = this;return cos.map(aIds, function(i, v){return oThis.get(v)});},remove : function(sId){var bResult = false;if(sId in this.index){bResult = true;delete this.index[sId];}return bResult;},clear : function(){this.index = null;this.index = {};}});return Map;})(),Index : (function(){ var Index = function(oConfig){this.data = {};};cos.cover(Index.prototype, {add : function(oIndex, sValue){var oData = this.data;cos.each(oIndex, function(i, v){(undefined === oData[i])   &&(oData[i]    = {});(undefined === oData[i][v])&&(oData[i][v] = []);oData[i][v].push(sValue);});},get : function(oIndex){var oData = this.data,aValues = [];cos.each(oIndex, function(i, v){if((undefined !== oData[i])&&(undefined !== oData[i][v])){aValues = aValues.push(oData[i][v]);}});return cos.arraypub.apply(cos, aValues);},remove : function(oIndex){var oData = this.data,aValues = this.get(oIndex);cos.each(oIndex, function(i, v){if(v in oData[i]){oData[i][v] = cos.arraysub(oData[i][v], aValues);}});},clear : function(){this.data = {};}});return Index;})(),arrayswitch : function(aString){ var oSwitch = {};cos.each(aString, function(i, v){!(v in oSwitch) && oSwitch.push(i)});return oSwitch;},arrayswitchX : function(aString){ var oSwitch = {};cos.each(aString, function(i, v){oSwitch[v] = oSwitch[v]||[];oSwitch[v].push(i);});return oSwitch;},arraypub : (function(){ var arraypub = function(aString1, aString2){	var aResult = [],oSwitch = cos.arrayswitch(aString2);cos.each(aString1, function(i, v){if(v in oSwitch){delete oSwitch[v];aResult.push(v)}});return aResult;}return function(aString){var aResult = aString,aArguments = cos.toArray(arguments);cos.each(aArguments.slice(1), function(i, v){aResult = arraypub(aResult, v);});return aResult;};})(),arraypubX : function(){ var oMap = new cos.Map(),aArguments = cos.toArray(arguments),aStrings = cos.map(aArguments, function(i, v){return oMap.toIndex(v);}),aIds = cos.arraypub.apply(cos, aStrings);return oMap.toData(aIds)},arraysub : (function(){var arraysub = function(aString1, aString2){var aResult = [],oSwitch = cos.arrayswitch(aString2);cos.each(aString1, function(i, v){if(!(v in oSwitch)){oSwitch[v] = 0;aResult.push(v)}});return aResult;}return function(aString){var aResult = aString,aArguments = cos.toArray(arguments);cos.each(aArguments.slice(1), function(i, v){aResult = arraysub(aResult, v);});return aResult;};})(),arraysubX : function(){var oMap = new cos.Map(),aArguments = cos.toArray(arguments),aStrings = cos.map(aArguments, function(i, v){return oMap.toIndex(v);}),aIds = cos.arraysub.apply(cos, aStrings);return oMap.toData(aIds);},indexOf : function(a, value){var nDataIndex = -1;cos.each(a, function(i, v){var bContinue = true;if(v === value){nDataIndex = i;bContinue = false;}return bContinue;});return nDataIndex;},inherit : function(o){var f = function(){};f.prototype = o;return cos.cover(new f, {superprototype:o});},chain : function(o1, oN){ var aArguments = cos.toArray(arguments),o = aArguments[0];cos.each(aArguments.slice(1), function(i, v){o = cos.cover(cos.inherit(o), v);});return o;},extend : function(){ var aArguments = cos.toArray(arguments),oConfig = aArguments[aArguments.length-1],superclass = aArguments[aArguments.length-2],aPrototypes = cos.map(aArguments, function(i, v){return cos.isFunction(v)?v.prototype:v;}),oPrototype = cos.chain.apply(cos, aPrototypes),oc = Object.prototype.constructor,subclass = oConfig.constructor != oc?oConfig.constructor:function(){superclass.apply(this, arguments);};subclass.prototype = oPrototype;subclass.prototype.constructor = subclass;subclass.superclass = superclass;return subclass;}},temp = cos.cover(cos, oUtility);})(cos);(function(cos){var Task = function(oConfig){cos.cover(this, {fn       : function(){return true},scope    : {},args     : [],onstop   : function(){},interval : 10,repeat   : 'unlimited',duration : 'unlimited' });cos.coverown(this, oConfig);if('unlimited' == this.repeat){this.repeat = Number.MAX_VALUE;}else if(!cos.isNumber(this.repeat)){this.repeat = 0;}if('unlimited' == this.duration){this.duration = Number.MAX_VALUE;}else if(!cos.isNumber(this.duration)){this.duration = 0;}if(!cos.isNumber(this.interval)){this.interval = 10;}cos.cover(this, {createtime : cos.now(), runtime    : 0, runcount   : 0, over       : false });this.runtime = this.createtime;},temp = cos.cover(Task.prototype, {run : function(){if(!this.over){var bResult = true,tNow = cos.now(),tTaskWait = tNow - this.runtime,tDuration = tNow - this.createtime;if( (tTaskWait >= this.interval) && (this.duration > tDuration) ){this.runtime = tNow;this.runcount ++;try{bResult = this.fn.apply(this.scope, this.args);}catch(e){bResult = false;}if( (false === bResult) || (this.runcount >= this.repeat) ){this.distroy();}}}return !this.over; },distroy : function(){ this.over = true;},stop : function(){if(!this.over){this.onstop();this.distroy();}}}),temp = cos.TaskMaster = function(oConfig){var oThis = cos.cover(this, {interval:10}),oThis = cos.coverown(this, oConfig),hInterval = null,aTasks = [],oMap = new cos.Map(),remove = function(oTask){var nIndex = -1;cos.each(aTasks, function(i, v){var bContinue = true;if(oTask === v){nIndex = i;bContinue = false;}return bContinue;});if(-1 != nIndex){ aTasks[nIndex] = null; aTasks.splice(nIndex, 1);}return (-1 != nIndex);},run = function(){ cos.each(aTasks.slice(0), function(i, v){!v.run()&&remove(v);});!aTasks.length&&stoprun(); },startrun = function(){!hInterval&&(hInterval = setInterval(run, oThis.interval));},stoprun = function(){clearInterval(hInterval)||(hInterval = null);},oThis = cos.cover(this, {add : function(oTaskConfig){var oTask = new Task(oTaskConfig);aTasks.push(oTask);startrun();return oMap.add(oTask);},remove : function(sId){var oTask = oMap.get(sId);oTask.stop();return remove(oTask);},clear : function(){cos.each(aTasks, function(i, v){v.stop();});aTasks = [];stoprun();oMap.clear();}});},temp = cos.cover(cos, {taskmgr : new cos.TaskMaster()}),temp = cos.Schedule = function(oConfig){var oThis = cos.cover(this, {fn    : function(){},scope : {},args  : [],delay : 10}),oThis = cos.coverown(this, oConfig),oTaskConfig = cos.cover({}, {fn : function(){try{oThis.fn.apply(oThis.scope, oThis.args);}catch(e){}},interval : oThis.delay,repeat : 1});this.task = cos.taskmgr.add(oTaskConfig);},temp = cos.cover(cos.Schedule.prototype, {cancel : function(){cos.taskmgr.remove(this.task);}}),temp = cos.todo = function(fn, scope, args, delay){return new cos.Schedule({fn    : fn,scope : scope,args  : args,delay : delay});},temp = cos.cover(cos, {watch : function(fnCondition, fnToDo, nInterval, nDuration){var task = cos.taskmgr.add({fn:function(){fnCondition()&&fnToDo();},interval:nInterval||10,duration:nDuration||'eternal'});return  { cancel:function(){return cos.taskmgr.remove(task);} };},until : function(fnCondition, fnToDo, nInterval, nDuration){var oWatch = cos.watch(fnCondition, function(){oWatch.cancel();fnToDo();}, nInterval, nDuration);return oWatch;}});})(cos);(function(cos){cos.Object = cos.extend(Object, {name:'Object'});cos.RootClass = cos.extend(cos.BaseClass, {name : 'RootClass',constructor : function(config){this.config = config||{};}});cos.EventObject = cos.extend(cos.RootClass, {name : 'EventObject',constructor : function(config){arguments.callee.superclass.apply(this, arguments);this.events = this.events||{};this.bubble = config.bubble;this.interval = config.interval;config.listeners&&this.addListeners(config.listeners);},addEvents : function(sEventName1, sEventName2, sEventNameN){cos.each(cos.toArray(arguments), function(i, v){this[v] = this[v]||[(function(sEventName){return function(){var bResult = true,fnListener = this['on' + sEventName];if(cos.isFunction(fnListener)){bResult = fnListener.apply(this, arguments);}return bResult;};})(v)];}, this.events = this.events||{});},fireEvent : function(sEventName){var aArguments = cos.toArray(arguments).slice(1),aListeners = this.events[sEventName],bResult = cos.each(aListeners, function(i, v){return v.apply(this, aArguments);}, this);bResult&&this.bubble&&this.bubble.apply(this, arguments);return bResult;},addListener : function(sEventName, fnListener){if(-1 == cos.indexOf(this.events[sEventName], fnListener)){this.events[sEventName].push(fnListener);}},addListeners : function(oListeners){cos.each(oListeners, function(i, v){if(cos.isFunction(v)){this.addListener(i, v);}else if(cos.isArray(v)){cos.each(v, function(j, v){this.addListener(i, v);}, this);}}, this);},on: function(so){(cos.isString(so)?this.addListener:this.addListeners).apply(this, arguments);},removeListener : function(sEventName, fnListener){var nIndex = cos.indexOf(this.events[sEventName], fnListener);if(-1 != nIndex){this.events[sEventName] = this.events[sEventName].slice(0);this.events[sEventName].splice(nIndex, 1);}},removeListeners : function(oListeners){cos.each(oListeners, function(i, v){if(cos.isFunction(v)){this.removeListener(i, v);}else if(cos.isArray(v)){cos.each(v, function(j, v){this.removeListener(i, v);}, this);}}, this);},clearEventListeners : function(sEventName){this.events[sEventName] = [];},clearListeners : function(){cos.each(this.events, function(i){this.clearEventListeners(i);}, this);},un: function(so){var aArguments = cos.toArray(arguments),nLength = aArguments.length;if(0 == nLength){this.clearListeners();}else if(cos.isString(aArguments[nLength-1])){cos.each(aArguments, function(i, v){this.clearEventListeners(v);}, this);}else{(cos.isString(so)?this.removeListener:this.removeListeners).apply(this, arguments);}}});var database = cos.extend(cos.RootClass, {name    : 'database',constructor : function(config) {arguments.callee.superclass.apply(this, arguments);this.data = config.data||[]; this.addEvents('beforeload', 'load', 'save', 'add', 'remove', 'clear', 'update', 'change');this.on({load   : function(){this.fireEvent('change');},add    : function(){this.fireEvent('change');},remove : function(){this.fireEvent('change');},clear  : function(){this.fireEvent('change');}});},each  : function(fn, scope){cos.each(this.data, function(i, v, a){return fn.call(scope||this, i, v, a);}, this);},find : function(nField, sValue, bCaseSensitive, nStartIndex){bCaseSensitive = bCaseSensitive||true;nStartIndex = nStartIndex||0;var nIndex = -1,fnCompare = bCaseSensitive?function(a,b){return a === b}:function(a,b){return a.tolowerCase() === b.tolowerCase()};cos.each(this.data.slice(nStartIndex), function(i, v, a){var bContinue = true;if(fnCompare(v[nField], sValue)){nIndex = i;bContinue = false;}return bContinue;}, this);return nIndex;},load : function(data){if(this.fireEvent('beforeload', data)){this.data = data;this.fireEvent('load', data);}},add : function(records){var nIndex = this.data.length;this.data = this.data.concat(records);this.fireEvent('add', records, nIndex);},getAt : function(nIndex){var record;if(0<=nIndex && nIndex<this.data.length) {record = this.data[nIndex];}else {record = null;}return record;},getAll : function(){return this.data;},remove : function(record){var nIndex = cos.indexOf(this.data, record);if(-1 != nIndex){this.removeAt(nIndex);}},removeAt : function(nIndex, nCount){nCount = cos.isNumber(nCount)?nCount:1;var aRecords = this.data.splice(nIndex, nCount);aRecords.length&&this.fireEvent('remove', aRecords, nIndex, aRecords.length);},removeAll : function(){var aData = this.data;if(aData.length > 0){this.data = [];this.fireEvent('clear', aData);}}});var store = cos.extend(database, cos.EventObject, { name    : 'store',constructor : function(config){arguments.callee.superclass.apply(this, arguments);this.config = config;this.column = config.column||[]; config.reader&&(this.reader = config.reader);config.writer&&(this.writer = config.writer);arguments.callee.prototype.superprototype.constructor.apply(this, arguments); var bAutoLoad = true;if('autoLoad' in config) {bAutoLoad = config.autoLoad}bAutoLoad&&this.load(config);},reader : function(f){f([],[])}, writer : function(f){f({})}, load : function(options){ var oThis = this;var aData = this.getAll();this.reader(function(data, column){aData = options.add?aData.concat(data):data;!oThis.column.length&&column&&(oThis.column = column);store.prototype.superprototype.load.call(oThis, aData);});},find : function(sField, sValue, bCaseSensitive, nStartIndex){var nIndex = -1,nColumnIndex = cos.indexOf(this.column, sField);if(-1 != nColumnIndex){nIndex = store.prototype.superprototype.find.call(this, nColumnIndex, sValue.toString(), bCaseSensitive, nStartIndex);}return nIndex;},getObjectAt : function(nIndex){var oData = null,aData = this.getAt(nIndex);if(null != aData){oData = {};cos.each(this.column, function(i, v){oData[v] = aData[i]});}return oData;}});var xcmpstore = cos.extend(store, {name    : 'xcmpstore',constructor : function(config){this.url = config.url||'/wcn/device/get.x';this.para = config.para||null;arguments.callee.superclass.apply(this, arguments);},reader : function(fnCallBack){Frame.Ajax.send(this.url, this.para, function(){try{var aDatas = [],aColumns = [],xmldoc = this.responseXML,oXDomRow = xmldoc.selectSingleNode('//row'),sTableName = oXDomRow.parentNode.tagName,sXPath = '//' + sTableName + '/row',aXDomRows = xmldoc.selectNodes(sXPath);cos.each(cos.toArray(aXDomRows), function(i, v){aData = [];cos.each(cos.toArray(v.childNodes), function(i, v){if(!(i in aColumns)){aColumns[i] = v.tagName;}aData.push(v.firstChild?v.firstChild.nodeValue:'');});aDatas.push(aData);});}catch(e){};fnCallBack(aDatas, aColumns);});}});var xmlstore = cos.extend(store, {name    : 'xmlstore',constructor : function(config){this.url = config.url||'/wcn/device/get.x';this.para = config.para||null;this.spec = config.spec||{}; arguments.callee.superclass.apply(this, arguments);},reader : function(fnCallBack){ var oSpec = this.spec,send = cos.win().Frame.Ajax.send, oRequest = this.request;send&&send(this.url, this.para, function(){ try{var aDatas = [],aColumns = [],xmldoc = this.responseXML;aData = [];cos.each(oSpec, function(i, v){aColumns.push(i);aData.push((xmldoc.selectSingleNode(v)||{text:null}).text);});aDatas.push(aData);}catch(e){alert(e);};fnCallBack(aDatas, aColumns);});}});cos.data.Store = store;cos.data.XcmpStore = xcmpstore;cos.data.XmlStore = xmlstore;cos.data.fromXml = function(option){var url = option.url||'/wcn/device/get.x',para = option.para||null,spec = option.spec||null, fnCallback = option.callback||function(){},send = cos.win().Frame.Ajax.send;Frame.Ajax.send(url, para, function(){try{var oResultantData = {}, aTableData,oRowData,xmldoc = this.responseXML,oXDomFirstRow = xmldoc.selectSingleNode('//row'),sFirstXPath = '//' + oXDomFirstRow.parentNode.tagName,oSpec = spec||{main:sFirstXPath};cos.each(oSpec, function(i, v){aTableData = [];cos.each(cos.toArray(xmldoc.selectNodes(v + '/row')), function(i, v){oRowData = {};cos.each(cos.toArray(v.childNodes), function(i, v){oRowData[v.tagName] = v.firstChild?v.firstChild.nodeValue:''});aTableData.push(oRowData);});oResultantData[i] = aTableData;});}catch(e){};fnCallback.call(oResultantData, oResultantData);});}})(cos);